.ui-form .ui-input-root.ui-input-buttons.rfv-buttons {
    margin-top: 0px;
    position: sticky;
    align-items: flex-start;
}

.ui-form .ui-input-buttons.rfv-buttons .ui-input-editor {
    flex-wrap: wrap;
}

.ui-input-root.rfv-restricted-input.d4-disabled {
    pointer-events: all;
    cursor: pointer!important;
}

/* Hide all state icons by default */
.ui-input-root > .ui-input-options .rfv-icon-lock,
.ui-input-root > .ui-input-options .rfv-icon-unlock,
.ui-input-root > .ui-input-options .rfv-icon-undo,
.ui-input-root > .ui-input-options .rfv-icon-warning {
    display: none;
}

/* Show warning icon if input is on warning state */
.ui-input-root.rfv-inconsistent-input > .ui-input-options .rfv-icon-warning {
    display: inherit;
}

/* Show undo icon if input is on inconstent state and hovered */
.ui-input-root.rfv-restricted-unlocked-input:hover .rfv-icon-undo, .ui-input-root.rfv-inconsistent-input:hover .rfv-icon-undo {
    display: inherit;
}

/* Show/hide lock-unlock icons on input hover */
.ui-input-root.rfv-restricted-input:hover .rfv-icon-lock {
    display: none;
}
.ui-input-root.rfv-restricted-input .rfv-icon-lock {
    display: inherit;
}
.ui-input-root.rfv-restricted-input .rfv-icon-unlock {
    display: none;
}
.ui-input-root.rfv-restricted-input:hover .rfv-icon-unlock {
    display: inherit;
}

.ui-form-condensed .rfv-buttons > .ui-label {
    margin-right: 0px!important;
}

.rfv-form .ui-form .rfv-buttons > .ui-input-editor {
    gap: 5px;
    justify-content: flex-end;
}

div.ui-box > div.ui-box.rfv-form > div.ui-div {
    overflow: visible!important;
}

.rfv-scalar-table {
    border-collapse: collapse;
    margin: 10px;
}

.rfv-scalar-table td {
    width: max-content;
    white-space: nowrap;
}

.rfv-scalar-table tr{
    min-height: 30px;
    border-bottom: 1pt solid var(--grey-12);
}

.rfv-scalar-table tr:nth-child(odd) {
    background-color: var(--grey-1);
}

.rfv-scalar-table td:last-child {
    width: 100%;
}