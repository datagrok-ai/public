/// DO NOT CHANGE: automatically generated using xamgle/build.dart

type String = string | null | undefined;
type Num = number | null | undefined;
type Bool = boolean | null | undefined;

export interface IDartApi {

  // Generated from ./lib/src/interop/grok_api.dart
  grok_Test_Error(s: any): any;
  grok_Unhandled_Error(x: any, s: any): any;
  grok_List_Get_Length(x: any): any;
  grok_List_Get(x: any, index: Num): any;
  grok_List_Set(x: any, index: Num, element: any): any;
  grok_List_Clear(x: any): any;
  grok_List_Insert(x: any, index: Num, element: any): any;
  grok_List_Add(x: any, element: any): any;
  grok_List_Sort(x: any): any;
  grok_List_Remove(x: any, element: any): any;
  grok_JSON_encode(o: any): any;
  grok_JSON_decode(s: String): any;
  grok_JS_To_Map(js: any): any;
  grok_Complete(c: any, result: any): any;
  grok_CompleteError(c: any, result: any, stack: any): any;
  grok_GetLogger(params: any): any;
  grok_Log(logger: any, level: String, message: String, params: any, auditType: String, stackTrace: String): any;
  grok_Get_CurrentObject(): any;
  grok_Set_CurrentObject(x: any, freeze: Bool, force: Bool): any;
  grok_Get_CurrentViewer(): any;
  grok_Set_CurrentViewer(x: any): any;
  grok_Get_LastError(): Promise<any>;
  grok_Clear_LastError(): any;
  grok_Set_LastError(_: any): any;
  grok_Get_TopMenu(): any;
  grok_Get_TopPanel(): any;
  grok_Get_BottomPanel(): any;
  grok_Get_Sidebar(): any;
  grok_Get_DockManager(): any;
  grok_Get_BrowsePanel(): any;
  grok_Tools_SetHoverVisibility(e: any, items: any): any;
  grok_Balloon(messageOrElement: any, type: String, options: any): any;
  grok_Balloon_CloseAll(): any;
  grok_CurrentTable(): any;
  grok_Get_CurrentView(): any;
  grok_Set_CurrentView(view: any): any;
  grok_TableNames(): any;
  grok_TableByName(s: any): any;
  grok_ScriptSync(script: String): any;
  grok_Get_PresentationMode(): any;
  grok_Set_PresentationMode(v: Bool): any;
  grok_Set_SimpleMode(s: Bool): any;
  grok_Get_SimpleMode(): any;
  grok_Get_HideTabsInPresentationMode(): any;
  grok_Set_HideTabsInPresentationMode(v: Bool): any;
  grok_GetDemoTable(path: String): Promise<any>;
  grok_DetectSemanticTypes(t: any): Promise<any>;
  grok_LoadDataFrame(p0: any): Promise<any>;
  grok_ViewByName(s: any): any;
  grok_Stream_Listen(stream: any, onData: any): any;
  grok_Object_ToString(o: any): any;
  grok_Dapi_Entities(): any;
  grok_Dapi_Queries(): any;
  grok_Dapi_Functions(): any;
  grok_Dapi_Function_Calls(): any;
  grok_Dapi_Connections(): any;
  grok_Dapi_Credentials(): any;
  grok_Dapi_Jobs(): any;
  grok_Dapi_Users(): any;
  grok_Dapi_Projects(): any;
  grok_Dapi_RecentProjects(): any;
  grok_Dapi_Notebooks(): any;
  grok_Dapi_Models(): any;
  grok_Dapi_Packages(): any;
  grok_Dapi_Layouts(): any;
  grok_Dapi_Views(): any;
  grok_Dapi_Tables(): any;
  grok_Dapi_Groups(): any;
  grok_Dapi_Scripts(): any;
  grok_Dapi_Environments(): any;
  grok_Dapi_Entities_GetEntities(ids: any): Promise<any>;
  grok_Dapi_Admin(): any;
  grok_Dapi_Admin_GetServiceInfos(adminClient: any): Promise<any>;
  grok_Dapi_Admin_Send_Email(adminClient: any, email: any): any;
  grok_Dapi_Log(): any;
  grok_Dapi_LogTypes(): any;
  grok_Dapi_Dockers(): any;
  grok_Dapi_DockerImages(): any;
  grok_Dapi_DockerContainers(): any;
  grok_Dapi_User_Reports(): any;
  grok_Dapi_User_Reports_Rules(): any;
  grok_DataSource_Find(s: any, id: String): Promise<any>;
  grok_DataSource_Save(s: any, e: any): Promise<any>;
  grok_DataSource_Delete(s: any, e: any): Promise<any>;
  grok_DataSource_Include(s: any, include: String): any;
  grok_DataSource_List(s: any): Promise<any>;
  grok_DataSource_Count(s: any): Promise<any>;
  grok_DataSource_First(s: any): Promise<any>;
  grok_UsersDataSource_Current(s: any): Promise<any>;
  grok_UsersDataSource_CurrentSession(s: any): Promise<any>;
  grok_ProjectsDataSource_Save(s: any, p: any, saveRelations: Bool): Promise<any>;
  grok_DataConnectionsDataSource_Save(s: any, c: any, saveCredentials: Bool): Promise<any>;
  grok_DataConnectionsDataSource_SubDir(s: any, c: any, dir: String): Promise<any>;
  grok_DataConnectionsDataSource_Get_Schemas(s: any, c: any): Promise<any>;
  grok_DataConnectionsDataSource_Get_Schema(s: any, c: any, schema: String): Promise<any>;
  grok_DataConnectionsDataSource_Get_Unique_Columns(s: any, c: any, schema: String, table: String): Promise<any>;
  grok_GroupsDataSource_Save(s: any, e: any): Promise<any>;
  grok_EntitiesDataSource_SaveProperties(s: any, props: any): Promise<any>;
  grok_EntitiesDataSource_GetProperties(s: any, e: any): Promise<any>;
  grok_EntitiesDataSource_SetProperties(s: any, e: any, props: any): Promise<any>;
  grok_EntitiesDataSource_DeleteProperties(s: any, props: any): Promise<any>;
  grok_CredentialsDataSource_ForEntity(s: any, e: any): Promise<any>;
  grok_CredentialsDataSource_Save(s: any, c: any): Promise<any>;
  grok_Dapi_UserDataStorage_PostValue(name: String, key: String, value: String, currentUser: Bool): Promise<any>;
  grok_Dapi_UserDataStorage_Post(name: String, data: any, currentUser: Bool): Promise<any>;
  grok_Dapi_UserDataStorage_Put(name: String, data: any, currentUser: Bool): Promise<any>;
  grok_Dapi_UserDataStorage_Get(name: String, currentUser: Bool): Promise<any>;
  grok_Dapi_UserDataStorage_GetValue(name: String, key: String, currentUser: Bool): Promise<any>;
  grok_Dapi_UserDataStorage_Delete(name: String, key: String, currentUser: Bool): Promise<any>;
  grok_UserSettings_Add(name: String, key: String, value: String, isPrivate: Bool): any;
  grok_UserSettings_AddAll(name: String, data: any, isPrivate: Bool): any;
  grok_UserSettings_Put(name: String, data: any, isPrivate: Bool): any;
  grok_UserSettings_Get(name: String, isPrivate: Bool): any;
  grok_UserSettings_GetValue(name: String, key: String, isPrivate: Bool): any;
  grok_UserSettings_Delete(name: String, key: String, isPrivate: Bool): any;
  grok_Dapi_Get_GroupUser(g: any): Promise<any>;
  grok_Dapi_Get_GroupsLookup(name: String): Promise<any>;
  grok_Dapi_Get_Permissions(e: any): Promise<any>;
  grok_Dapi_Check_Permissions(e: any, permission: String): Promise<any>;
  grok_Dapi_Set_Permission(e: any, g: any, edit: Bool): Promise<any>;
  grok_Dapi_Delete_Permission(e: any, g: any): Promise<any>;
  grok_LayoutsDataSource_Applicable(s: any, t: any): Promise<any>;
  grok_DataSource_By(s: any, i: Num): any;
  grok_DataSource_AllPackageVersions(s: any): any;
  grok_DataSource_Page(s: any, i: Num): any;
  grok_DataSource_NextPage(s: any): any;
  grok_DataSource_WhereSmart(s: any, w: String): any;
  grok_DataSource_Order(s: any, name: String, desc: Bool): any;
  grok_GetType(x: any): any;
  grok_EventData_Get_CausedBy(e: any): any;
  grok_EventData_Get_Sender(e: any): any;
  grok_EventData_Get_IsDefaultPrevented(e: any): any;
  grok_EventData_PreventDefault(e: any): any;
  grok_EventData_Get_Args(e: any): any;
  grok_TypedEventArgs_Get_Type(args: any): any;
  grok_TypedEventArgs_Get_Data(args: any): any;
  grok_DockView(addToWorkspace: Bool): any;
  grok_DockView_InitDock(v: any): any;
  grok_DockView_HandleResize(v: any): any;
  grok_View(): any;
  grok_View_OnAdded(x: any): any;
  grok_View_ForObject(x: any): any;
  grok_View_FromViewAsync(jsugetViewAsync: any, ribbon: Bool): any;
  grok_View_Close(v: any): any;
  grok_View_Get_Name(v: any): any;
  grok_View_Set_Name(v: any, s: String): any;
  grok_View_Get_HelpUrl(v: any): any;
  grok_View_Set_HelpUrl(v: any, url: String): any;
  grok_View_Get_Id(v: any): any;
  grok_View_Get_Path(v: any): any;
  grok_View_Set_Path(v: any, s: String): any;
  grok_View_Get_BasePath(v: any): any;
  grok_View_Set_BasePath(v: any, s: String): any;
  grok_View_Get_Description(v: any): any;
  grok_View_Set_Description(v: any, s: String): any;
  grok_View_Get_Type(v: any): any;
  grok_View_Get_Table(v: any): any;
  grok_View_Get_Root(v: any): any;
  grok_View_Get_Toolbox(v: any): any;
  grok_View_Set_Toolbox(v: any, e: any): any;
  grok_View_Get_ParentView(v: any): any;
  grok_View_Set_ParentView(v: any, c: any): any;
  grok_View_Get_ParentCall(v: any): any;
  grok_View_Set_ParentCall(v: any, c: any): any;
  grok_View_Get_Temp(v: any): any;
  grok_View_Load_Layout(v: any, l: any, pickupColumnsTags: Bool): any;
  grok_View_Save_Layout(v: any): any;
  grok_View_Get_Info(v: any): any;
  grok_View_Get_DockNode(v: any): any;
  grok_View_Get_RibbonMenu(v: any): any;
  grok_View_Set_RibbonMenu(v: any, menu: any): any;
  grok_View_Get_StatusBarPanels(v: any): any;
  grok_View_Set_StatusBarPanels(v: any, panels: any): any;
  grok_View_CreateByType(viewType: String, options: any): any;
  grok_View_URL_changed(v: any): any;
  grok_View_Get_DataFrame(v: any): any;
  grok_View_Set_DataFrame(v: any, t: any): any;
  grok_View_Get_DockManager(v: any): any;
  grok_View_Get_Grid(v: any): any;
  grok_View_AddViewerByName(v: any, s: String): any;
  grok_View_AddViewer(v: any, vi: any): any;
  grok_View_SetRibbonPanels(v: any, panels: any, clear: Bool): any;
  grok_View_GetRibbonPanels(v: any): any;
  grok_View_Get_ToolboxPage(v: any): any;
  grok_View_Detach(v: any): any;
  grok_View_DetachViewers(v: any): any;
  grok_View_ResetLayout(v: any): any;
  grok_View_CreateJsViewHost(v: any): any;
  grok_View_Get_Viewers(v: any): any;
  grok_TableView(d: any, addToWorkspace: Bool): any;
  grok_TableView_Get_SyncCurrentObject(tv: any): any;
  grok_TableView_Set_SyncCurrentObject(tv: any, x: Bool): any;
  grok_TableView_GetFilters(tv: any, addDefaultFilters: Bool): any;
  grok_TableView_LoadState(v: any, state: String, pickupColumnsTags: Bool): any;
  grok_TableView_SaveState(v: any): any;
  grok_TableView_ProcessNewViewer(v: any, viewer: any): any;
  grok_CardView_Create(options: any): any;
  grok_CardView_Get_SearchValue(v: any): any;
  grok_CardView_Set_SearchValue(v: any, s: String): any;
  grok_CardView_Get_Meta(v: any): any;
  grok_CardView_Set_Meta(v: any, s: any): any;
  grok_CardView_Get_Type(v: any): any;
  grok_CardView_Set_Type(v: any, t: any): any;
  grok_CardView_Get_SearchFields(v: any): any;
  grok_CardView_Set_SearchFields(v: any, t: any): any;
  grok_CardView_Get_PermanentFilter(v: any): any;
  grok_CardView_Set_PermanentFilter(v: any, s: String): any;
  grok_CardView_Get_Hierarchy(v: any): any;
  grok_CardView_Set_Hierarchy(v: any, s: any): any;
  grok_CardView_Get_HierarchyProperties(v: any): any;
  grok_CardView_Set_HierarchyProperties(v: any, s: any): any;
  grok_CardView_Get_ShowTree(v: any): any;
  grok_CardView_Set_ShowTree(v: any, s: any): any;
  grok_CardView_Get_RenderMode(v: any): any;
  grok_CardView_Set_RenderMode(v: any, s: any): any;
  grok_CardView_Get_CategoryFilters(v: any): any;
  grok_CardView_Set_CategoryFilters(v: any, s: any): any;
  grok_CardView_Get_Filters(v: any): any;
  grok_CardView_Set_Filters(v: any, s: any): any;
  grok_CardView_Refresh(v: any): any;
  grok_CardView_Repaint(v: any): any;
  grok_FilesView_Create(options: any): any;
  grok_FilesView_Get_ShowPreview(v: any): any;
  grok_FilesView_Set_ShowPreview(v: any, x: Bool): any;
  grok_FilesView_Get_ShowTree(v: any): any;
  grok_FilesView_Set_ShowTree(v: any, x: Bool): any;
  grok_FilesView_Get_ShowSearch(v: any): any;
  grok_FilesView_Set_ShowSearch(v: any, x: Bool): any;
  grok_FilesView_Get_Tree(v: any): any;
  grok_ProjectsView(params: any): any;
  grok_ScriptsView(params: any): any;
  grok_ScriptView(script: any): any;
  grok_ViewLayout_Set_ViewState(layout: any, state: String): any;
  grok_ViewLayout_Get_ViewState(layout: any): any;
  grok_ViewLayout_Set_UserDataValue(layout: any, key: String, data: String): any;
  grok_ViewLayout_Get_UserDataValue(layout: any, key: String): any;
  grok_ViewLayout_FromJson(json: String): any;
  grok_ViewLayout_FromViewState(state: String): any;
  grok_ViewLayout_ToJson(layout: any): any;
  grok_ViewLayout_Get_Columns(layout: any): any;
  grok_ViewInfo_Set_ViewState(info: any, state: String): any;
  grok_ViewInfo_Get_ViewState(info: any): any;
  grok_ViewInfo_Set_UserDataValue(info: any, key: String, data: String): any;
  grok_ViewInfo_Get_UserDataValue(info: any, key: String): any;
  grok_ViewInfo_Get_View(info: any): any;
  grok_ViewInfo_Get_Table(info: any): any;
  grok_ViewInfo_FromJson(json: String): any;
  grok_ViewInfo_FromViewState(state: String): any;
  grok_ViewInfo_ToJson(info: any): any;
  grok_TabControlBase_Get_Header(tc: any): any;
  grok_TabControlBase_Get_Panes(tc: any): any;
  grok_TabControlBase_Clear(tc: any): any;
  grok_TabControlBase_GetPane(tc: any, name: String): any;
  grok_TabControlBase_AddPane(tc: any, name: String, getContent: any, icon: any, allowClose: Bool): any;
  grok_TabControlBase_Get_CurrentPane(tc: any): any;
  grok_TabControlBase_Set_CurrentPane(tc: any, c: any): any;
  grok_TabPaneBase_Get_Name(pane: any): any;
  grok_TabPaneBase_Get_Root(pane: any): any;
  grok_Accordion(key: String): any;
  grok_Accordion_Get_Root(a: any): any;
  grok_Accordion_Get_Header(a: any): any;
  grok_Accordion_Set_Header(a: any, header: any): any;
  grok_Accordion_Get_AutoHideTabHeader(a: any): any;
  grok_Accordion_Set_AutoHideTabHeader(a: any, x: Bool): any;
  grok_Accordion_Get_Context(a: any): any;
  grok_Accordion_Set_Context(a: any, x: any): any;
  grok_Accordion_End(a: any): any;
  grok_Accordion_AddPane(a: any, name: String, getContent: any, expanded: Bool, before: any, count: any, allowDragOut: Bool): any;
  grok_Accordion_AddTitle(a: any, e: any): any;
  grok_Accordion_Get_Panes(a: any): any;
  grok_Accordion_RemovePane(a: any, ap: any): any;
  grok_AccordionPane_Get_Expanded(p: any): any;
  grok_AccordionPane_Set_Expanded(p: any, expanded: Bool): any;
  grok_AccordionPane_Get_Name(p: any): any;
  grok_AccordionPane_Set_Name(p: any, name: String): any;
  grok_TabPane_Get_Header(p: any): any;
  grok_TabPane_Get_Content(p: any): any;
  grok_TabPane_Get_Parent(p: any): any;
  grok_TabControl(vertical: Bool): any;
  grok_ToolboxPage_Get_Accordion(t: any): any;
  grok_VirtualItemView(verticalScroll: any, maxCols: any): any;
  grok_VirtualItemView_Get_Root(v: any): any;
  grok_VirtualItemView_SetData(v: any, count: Num, create: any): any;
  grok_VirtualItemView_RefreshItem(v: any, itemIndex: Num): any;
  grok_Menu(): any;
  grok_Menu_Get_Root(m: any): any;
  grok_Menu_Click(m: any): any;
  grok_Menu_Context(): any;
  grok_Menu_Group(m: any, s: String, order: Num): any;
  grok_Menu_EndGroup(m: any): any;
  grok_Menu_Item(m: any, s: String, onClick: any, order: Num, options: any): any;
  grok_Menu_Separator(m: any): any;
  grok_Menu_Show(m: any, e: any, ev: any, x: Num, y: Num, nextToElement: Bool): any;
  grok_Menu_Find(m: any, id: String): any;
  grok_Menu_Clear(m: any): any;
  grok_Menu_Remove(m: any, id: String): any;
  grok_MenuItem_ToString(mi: any): any;
  grok_Menu_Get_CloseOnClick(m: any): any;
  grok_Menu_Set_CloseOnClick(m: any, closeOnClick: Bool): any;
  grok_Menu_Items(m: any, items: any, onClick: any, isValid: any, isChecked: any, toString: any, describe: any, onMouseEnter: any, radioGroup: String): any;
  grok_Menu_ColorPalette(m: any, colors: any, getInitial: any, onSelect: any, onPreview: any, asGroup: String, visible: Bool, categorical: Bool, resetColorMs: Num, closeOnClick: Bool): any;
  grok_Menu_SingleColumSelector(m: any, dataFrame: any, initialValue: String, onChange: any, asGroup: String, nullable: Bool, visible: Bool, editable: Bool, closeOnClick: Bool, changeOnHover: Bool, columnFilter: any): any;
  grok_Menu_MultiColumSelector(m: any, dataFrame: any, initialValue: any, onChange: any, asGroup: String, visible: Bool, editable: Bool, columnFilter: any): any;
  grok_Menu_Header(m: any, text: String, onClick: any, hasHoverEffect: Bool, getDescription: any): any;
  grok_Dialog(title: String, helpUrl: String, showHeader: Bool, showFooter: Bool): any;
  grok_Dialog_Get_Root(d: any): any;
  grok_Dialog_Get_Title(d: any): any;
  grok_Dialog_Set_Title(d: any, t: String): any;
  grok_Dialog_Get_HelpUrl(d: any): any;
  grok_Dialog_Set_HelpUrl(d: any, url: String): any;
  grok_Dialog_Get_Inputs(d: any): any;
  grok_Dialog_GetButton(d: any, text: String): any;
  grok_Dialog_AddButton(d: any, text: String, action: any, index: Num, tooltipText: String): any;
  grok_Dialog_AddContextAction(d: any, text: String, action: any): any;
  grok_Dialog_InitDefaultHistory(d: any): any;
  grok_Dialog_History(d: any, getInput: any, applyInput: any): any;
  grok_Dialog_Add(d: any, x: any): any;
  grok_Dialog_Show(d: any, modal: Bool, resizable: Bool, fullScreen: Bool, center: Bool, centerAt: any, x: Num, y: Num, width: Num, height: Num, backgroundColor: String, showNextTo: any): any;
  grok_Dialog_OnInputChanged(d: any, handler: any): any;
  grok_Dialog_OnCancel(d: any, handler: any): any;
  grok_Dialog_OnOK(d: any, handler: any): any;
  grok_Dialog_Close(d: any): any;
  grok_Dialog_OnClose(d: any, handler: any): any;
  grok_Dialog_Clear(d: any): any;
  grok_Dialog_GetOpenDialogs(): any;
  grok_Tooltip_Hide(): any;
  grok_Tooltip_SetOn(e: any, x: any, position: String): any;
  grok_Tooltip_Show(content: any, x: Num, y: Num): any;
  grok_Tooltip_ShowRowGroup(dataFrame: any, checkRow: any, x: Num, y: Num): any;
  grok_Tooltip_Get_Root(): any;
  grok_Tooltip_Get_IsVisible(): any;
  grok_Utils_LoadJsCss(files: any): Promise<any>;
  grok_Utils_FormatNumber(x: Num, format: String): any;
  grok_Utils_SelectRowsWhere(mask: any, check: any, ctrlKey: Bool, shiftKey: Bool, metaKey: Bool, modifiedSelectOnly: Bool): any;
  grok_Utils_GetUniqueName(name: String, existing: any, auto: Bool, idx: Num, render: any, choices: any): any;
  grok_Utils_DetectColumnHierarchy(columns: any, maxDepth: Num): any;
  grok_Viewer_FromType(viewerType: String, table: any, json: String): any;
  grok_Viewer_FromType_Async(viewerType: String, table: any, json: String): Promise<any>;
  grok_Viewer_FromJsViewer(jsViewer: any): any;
  grok_FilterGroup_GetStates(filterGroup: any, colName: String, type: String): any;
  grok_FilterGroup_Add(filterGroup: any, state: any): any;
  grok_FilterGroup_UpdateOrAdd(filterGroup: any, state: any, requestFilter: Bool): any;
  grok_FilterGroup_GetFilterSummary(filterGroup: any): any;
  grok_FilterGroup_Get_Filters(filterGroup: any): any;
  grok_FilterGroup_SetEnabled(filterGroup: any, filter: any, active: Bool): any;
  grok_FilterGroup_SetExpanded(filterGroup: any, filter: any, active: Bool): any;
  grok_FilterGroup_Remove(filterGroup: any, filter: any): any;
  grok_DockNode_Get_Container(node: any): any;
  grok_DockNode_DetachFromParent(node: any): any;
  grok_DockNode_RemoveChild(node: any, childNode: any): any;
  grok_DockNode_Parent(n: any): any;
  grok_DockNode_Children(n: any): any;
  grok_DockContainer_Set_Title(c: any, title: String): any;
  grok_DockContainer_Get_Title(c: any): any;
  grok_DockContainer_Get_ContainerElement(c: any): any;
  grok_DockContainer_Destroy(c: any): any;
  grok_DockContainer_Float(c: any): any;
  grok_DockContainer_SetActiveChild(c: any, child: any): any;
  grok_DockManager_Dock(m: any, refNode: any, e: any, dockType: String, title: String, ratio: Num): any;
  grok_DockManager_DockDialog(m: any, refNode: any, e: any, dockType: String, title: String): any;
  grok_DockManager_Get_Element(m: any): any;
  grok_DockManager_Get_RootNode(m: any): any;
  grok_DockManager_Get_DocumentContainer(m: any): any;
  grok_DockManager_SaveState(m: any): any;
  grok_DockManager_LoadState(m: any, state: String): any;
  grok_DockManager_UndockByElement(m: any, e: any): any;
  grok_DockManager_UndockNode(m: any, n: any): any;
  grok_DockManager_FindNode(m: any, e: any): any;
  grok_DockManager_HandleResize(d: any): any;
  grok_DockManager_OnElementClosed(d: any): any;
  grok_Viewer_GetViewerTypes(): any;
  grok_Viewer_Root(v: any): any;
  grok_Viewer_Get_Type(v: any): any;
  grok_Viewer_Get_View(v: any): any;
  grok_Viewer_Get_HelpUrl(v: any): any;
  grok_Viewer_Set_HelpUrl(v: any, s: String): any;
  grok_Viewer_Get_DataFrame(v: any): any;
  grok_Viewer_Set_DataFrame(v: any, df: any): any;
  grok_Viewer_Get_Filter(v: any): any;
  grok_Viewer_Get_EventBus_Events(v: any): any;
  grok_Viewer_Get_PropertyChanged_Events(v: any): any;
  grok_Viewer_To_Trellis_Look(v: any): any;
  grok_Viewer_Copy_Viewers_Look(v: any, other: any): any;
  grok_Viewer_Close(v: any): any;
  grok_Viewer_Options(v: any, json: String): any;
  grok_Viewer_SetOptions(v: any, json: String): any;
  grok_Viewer_GetOptions(v: any, includeDefaults: Bool): any;
  grok_Viewer_Serialize(v: any, includeDefaults: Bool): any;
  grok_Viewer_Grid(t: any, json: String): any;
  grok_Viewer_Histogram(t: any, json: String): any;
  grok_Viewer_BoxPlot(t: any, json: String): any;
  grok_Viewer_Filters(t: any, json: String): any;
  grok_Viewer_ScatterPlot(t: any, json: String): any;
  grok_Viewer_LineChart(t: any, json: String): any;
  grok_Viewer_GetInfo(v: any): any;
  grok_Viewer_Get_Look(v: any): any;
  grok_Viewer_Get_Properties(v: any): any;
  grok_Viewer_Get_Tags(v: any): any;
  grok_Viewer_Remove_From_View(v: any): any;
  grok_Viewer_Props_SetDefaultProperty(viewerType: String, propertyName: String, propertyValue: any): any;
  grok_Viewer_Props_SetDefault(v: any, data: Bool, style: Bool): any;
  grok_Viewer_Props_ResetDefault(v: any): any;
  grok_ScatterPlotViewer_HitTest(s: any, x: Num, y: Num): any;
  grok_ScatterPlotViewer_InvalidateCanvas(s: any): any;
  grok_ScatterPlotViewer_Zoom(s: any, x1: Num, y1: Num, x2: Num, y2: Num): any;
  grok_ScatterPlotViewer_InvalidateCanvas(s: any): any;
  grok_ScatterPlotViewer_Get_ViewBox(s: any): any;
  grok_ScatterPlotViewer_Get_XAxisBox(s: any): any;
  grok_ScatterPlotViewer_Get_YAxisBox(s: any): any;
  grok_ScatterPlotViewer_Get_Viewport(s: any): any;
  grok_ScatterPlotViewer_Set_Viewport(s: any, x: Num, y: Num, width: Num, height: Num): any;
  grok_ScatterPlotViewer_PointToScreen(s: any, index: Num): any;
  grok_ScatterPlotViewer_WorldToScreen(s: any, x: Num, y: Num): any;
  grok_ScatterPlotViewer_ScreenToWorld(s: any, x: Num, y: Num): any;
  grok_ScatterPlotViewer_Render(s: any, g: any): any;
  grok_ScatterPlotViewer_GetRowTooltip(s: any, rowIdx: Num): any;
  grok_ScatterPlotViewer_GetMarkerSize(s: any, rowIdx: Num): any;
  grok_ScatterPlotViewer_GetMarkerSizes(s: any): any;
  grok_ScatterPlotViewer_GetMarkerType(s: any, rowIdx: Num): any;
  grok_ScatterPlotViewer_GetMarkerTypes(s: any): any;
  grok_ScatterPlotViewer_GetMarkerColor(s: any, rowIdx: Num): any;
  grok_ScatterPlotViewer_GetMarkerColors(s: any): any;
  grok_FormViewer_CreateDefault(table: any, columnNames: any): any;
  grok_FormViewer_Get_Form(form: any): any;
  grok_FormViewer_Get_Editable(form: any): any;
  grok_FormViewer_Set_Editable(form: any, editable: Bool): any;
  grok_FormViewer_Get_DesignMode(form: any): any;
  grok_FormViewer_Set_DesignMode(form: any, designMode: Bool): any;
  grok_Form_ForDataFrame(table: any, columnNames: any): any;
  grok_Form_Get_Editable(form: any): any;
  grok_Form_Set_Editable(form: any, editable: Bool): any;
  grok_Form_Get_DesignMode(form: any): any;
  grok_Form_Set_DesignMode(form: any, designMode: Bool): any;
  grok_Form_Set_Row(form: any, row: any): any;
  grok_Form_Get_DataFrame(form: any): any;
  grok_Form_Get_RowIdx(form: any): any;
  grok_Form_Get_State(form: any): any;
  grok_Form_Set_State(form: any, state: String): any;
  grok_LineChartViewer_activeFrame(s: any): any;
  grok_LineChartViewer_ResetView(l: any): any;
  grok_BarChartViewer_ResetView(b: any): any;
  grok_BoxPlotViewer_ResetView(b: any): any;
  grok_FormulaLineHelper_SetDefaultParams(formulaItem: any): any;
  grok_FormulaLineHelper_GetMeta(formulaItem: any): any;
  grok_CanvasViewer_RunPostponedComputations(v: any): any;
  grok_Widget_RegisterCleanup(element: any, cleanup: any): any;
  grok_Widget_Get_Root(widget: any): any;
  grok_Widget_Get_Type(widget: any): any;
  grok_Widget_Get_Temp(widget: any): any;
  grok_Widget_Wrap(jsWidget: any): any;
  grok_Widget_Kill(element: any): any;
  grok_Widget_FromRoot(element: any): any;
  grok_Widget_GetAll(): any;
  grok_Qnum_Parse(s: String): any;
  grok_Qnum_ToString(x: Num): any;
  grok_Qnum_Qualifier(x: Num): any;
  grok_Row(table: any, rowIdx: Num): any;
  grok_Row_Get_DataFrame(row: any): any;
  grok_Row_Get_Idx(row: any): any;
  grok_DataFrame(rowCount: Num): any;
  grok_DataFrame_Get_TableInfo(d: any): any;
  grok_DataFrame_FromColumns(columns: any): any;
  grok_DataFrame_FromJson(json: String): any;
  grok_DataFrame_Get_Filter(t: any): any;
  grok_DataFrame_Get_Selection(t: any): any;
  grok_DataFrame_Get_Name(t: any): any;
  grok_DataFrame_Set_Name(t: any, s: String): any;
  grok_DataFrame_Get_Tag(t: any, tag: String): any;
  grok_DataFrame_Set_Tag(t: any, tag: String, value: any): any;
  grok_DataFrame_Get_CurrentRowIdx(t: any): any;
  grok_DataFrame_Set_CurrentRowIdx(t: any, idx: Num): any;
  grok_DataFrame_Get_MouseOverRowIdx(t: any): any;
  grok_DataFrame_Set_MouseOverRowIdx(t: any, idx: Num): any;
  grok_DataFrame_Get_CurrentCol(t: any): any;
  grok_DataFrame_Set_CurrentCol(t: any, col: any): any;
  grok_DataFrame_Get_CurrentCell(t: any): any;
  grok_DataFrame_Set_CurrentCell(t: any, cell: any): any;
  grok_DataFrame_RowCount(t: any): any;
  grok_DataFrame_Columns(t: any): any;
  grok_DataFrame_Rows(t: any): any;
  grok_DataFrame_Cell(t: any, idx: Num, name: String): any;
  grok_DataFrame_ColumnByName(t: any, colName: String): any;
  grok_DataFrame_ToCsv(t: any, options: any, grid: any): any;
  grok_DataFrame_ToCsvEx(t: any, options: any, grid: any): Promise<any>;
  grok_DataFrame_GroupBy(t: any, colNames: any): any;
  grok_DataFrame_Unpivot(t: any, copyColumnNames: any, mergeColumnNames: any, categoryColumnName: String, valueColumnName: String): any;
  grok_DataFrame_Clone(t: any, rowMask: any, columnIds: any, saveSelection: Bool): any;
  grok_DataFrame_OnFilterChanged(t: any, f: any): any;
  grok_DataFrame_OnSelectionChanged(t: any, f: any): any;
  grok_DataFrame_OnDataChanged(t: any, f: any): any;
  grok_DataFrame_OnEvent(t: any, event: String, f: any): any;
  grok_DataFrame_FireValuesChanged(t: any): any;
  grok_DataFrame_ChangeColumnType(t: any, column: any, newType: String, format: String): any;
  grok_DataFrame_Append(t1: any, t2: any, inPlace: Bool, columnsToAppend: any): any;
  grok_DataFrame_Append_Merge(parent: any, t: any): any;
  grok_DataFrame_Get_Temp(t: any): any;
  grok_DataFrame_Get_Tags(t: any): any;
  grok_DataFrame_GetSortedOrder(t: any, sortByColumnIds: any, sortOrders: any, mask: any): any;
  grok_DataFrame_FromByteArray(bytes: any): any;
  grok_DataFrame_ToByteArray(t: any): any;
  grok_DataFrame_ExportAndReopen(t: any): any;
  grok_Map_Get(map: any, key: any): any;
  grok_Map_Set(map: any, key: any, value: any): any;
  grok_Map_Delete(map: any, key: any): any;
  grok_Map_Has(map: any, key: any): any;
  grok_Map_Keys(map: any): any;
  grok_Map_Values(map: any): any;
  grok_Map_Clear(map: any): any;
  grok_Map_Size(map: any): any;
  grok_Func_InputParamMap_Get(call: any, key: String): any;
  grok_Func_InputParamMap_Set(call: any, key: String, value: any): any;
  grok_Func_InputParamMap_Delete(call: any, key: String): any;
  grok_Func_InputParamMap_Has(call: any, key: String): any;
  grok_Func_InputParamMap_Keys(call: any): any;
  grok_Func_InputParamMap_Values(call: any): any;
  grok_Func_InputParamMap_Clear(call: any): any;
  grok_Func_InputParamMap_Size(call: any): any;
  grok_Func_OutputParamMap_Get(call: any, key: String): any;
  grok_Func_OutputParamMap_Set(call: any, key: String, value: any): any;
  grok_Func_OutputParamMap_Delete(call: any, key: String): any;
  grok_Func_OutputParamMap_Has(call: any, key: String): any;
  grok_Func_OutputParamMap_Keys(call: any): any;
  grok_Func_OutputParamMap_Values(call: any): any;
  grok_Func_OutputParamMap_Clear(call: any): any;
  grok_Func_OutputParamMap_Size(call: any): any;
  grok_GroupByBuilder_Aggregate(b: any, autoName: Bool): any;
  grok_GroupByBuilder_WhereBitSet(b: any, bitset: any): any;
  grok_GroupByBuilder_Add(b: any, agg: String, colName: String, resultColName: String): any;
  grok_GroupByBuilder_GetGroups(b: any): any;
  grok_GroupByBuilder_Where(b: any, pattern: any): any;
  grok_ColumnList_Get_DataFrame(cols: any): any;
  grok_ColumnList_Length(cols: any): any;
  grok_ColumnList_ByIndex(cols: any, index: Num): any;
  grok_ColumnList_BySemType(cols: any, semType: String): any;
  grok_ColumnList_BySemTypeAll(cols: any, semType: String): any;
  grok_ColumnList_ByName(cols: any, name: String): any;
  grok_ColumnList_Names(cols: any): any;
  grok_ColumnList_Add(cols: any, col: any, notify: Bool): any;
  grok_ColumnList_Insert(cols: any, col: any, index: Num, notify: Bool): any;
  grok_ColumnList_AddNew(cols: any, name: String, type: String): any;
  grok_ColumnList_AddNewCalculated(cols: any, name: String, expression: String, type: String, treatAsString: Bool, subscribeOnChanges: Bool): Promise<any>;
  grok_ColumnList_GetNewCalculated(cols: any, name: String, expression: String, type: String, treatAsString: Bool): Promise<any>;
  grok_ColumnList_AddNewVirtual(cols: any, name: String, getValue: any, setValue: any, type: String): any;
  grok_ColumnList_Remove(cols: any, name: String, notify: Bool): any;
  grok_ColumnList_Contains(cols: any, name: String): any;
  grok_ColumnList_Replace(cols: any, columnToReplace: any, newColumn: any, notify: Bool): any;
  grok_ColumnList_Categorical(cols: any): any;
  grok_ColumnList_Numerical(cols: any): any;
  grok_ColumnList_DateTime(cols: any): any;
  grok_ColumnList_NumericalNoDateTime(cols: any): any;
  grok_ColumnList_Boolean(cols: any): any;
  grok_ColumnList_Selected(cols: any): any;
  grok_ColumnList_ByTags(cols: any, desiredTags: any): any;
  grok_ColumnList_GetUnusedName(cols: any, name: String, choices: any): any;
  grok_ColumnList_SetOrder(columns: any, columnNames: any): any;
  grok_Column_FromStrings(name: String, list: any): any;
  grok_Column_FromInt32Array(name: String, data: any, length: Num): any;
  grok_Column_FromFloat32Array(name: String, data: any, length: Num): any;
  grok_Column_FromFloat64Array(name: String, data: any, length: Num): any;
  grok_Column_FromList(type: String, name: String, list: any): any;
  grok_Column_FromIndexes(name: String, categories: any, indexes: any): any;
  grok_Column_FromType(type: String, name: String, length: Num): any;
  grok_Column_FromBitSet(name: String, bitset: any): any;
  grok_Column_Get_Type(c: any): any;
  grok_Column_Get_Length(c: any): any;
  grok_Column_Get_DataFrame(c: any): any;
  grok_Column_Get_SemType(c: any): any;
  grok_Column_Set_SemType(c: any, semType: String): any;
  grok_Column_Get_LayoutColumnId(c: any): any;
  grok_Column_Set_LayoutColumnId(c: any, id: String): any;
  grok_Column_Get_Name(c: any): any;
  grok_Column_Set_Name(c: any, name: String): any;
  grok_Column_Get_Version(c: any): any;
  grok_Column_GetRawDataDartium(c: any): any;
  grok_Column_GetRawData(c: any): any;
  grok_Column_SetRawData(c: any, rawData: any, notify: any): any;
  grok_Column_AsDoubleList(c: any): any;
  grok_Column_Scale(c: any, i: Num): any;
  grok_Column_GetValue(c: any, i: Num): any;
  grok_Column_SetValue(c: any, i: Num, x: any, notify: Bool): any;
  grok_Column_GetString(c: any, i: Num): any;
  grok_Column_SetString(c: any, i: Num, s: String, notify: Bool): any;
  grok_Column_GetNumber(c: any, i: Num): any;
  grok_Column_IsNone(c: any, i: Num): any;
  grok_Column_Min(c: any): any;
  grok_Column_Max(c: any): any;
  grok_Column_Categories(c: any): any;
  grok_Column_GetCategory(c: any, idx: Num): any;
  grok_Column_Remove_Tag(c: any, tag: String): any;
  grok_Column_Get_Tag(c: any, tag: String): any;
  grok_Column_Set_Tag(c: any, tag: String, value: any): any;
  grok_Column_SetCategoryOrder(c: any, order: any): any;
  grok_Column_GetCategoryOrder(c: any): any;
  grok_Column_ToList(c: any): any;
  grok_Column_ConvertTo(c: any, newType: String, format: String): any;
  grok_Column_Get_Temp(c: any): any;
  grok_Column_Get_Tags(c: any): any;
  grok_Column_Matches(c: any, filter: String): any;
  grok_Column_Init(c: any, indexToValue: any): any;
  grok_Column_Clone(c: any, mask: any): any;
  grok_Column_SetAllValues(c: any, value: any): any;
  grok_Column_Get_ValueComparer(c: any): any;
  grok_Column_Set_ValueComparer(c: any, valueComparer: any): any;
  grok_Column_GetSortedOrder(c: any): any;
  grok_Column_Compact(c: any): any;
  grok_Column_IsVirtual(c: any): any;
  grok_Column_ApplyFormula(c: any, formula: String, type: String, treatAsString: Bool): Promise<any>;
  grok_Column_UpdateDependentColumns(col: any): Promise<any>;
  grok_Column_Aggregate(col: any, aggrType: String): any;
  grok_Column_GetColors(column: any): any;
  grok_Column_GetColor(column: any, index: Num): any;
  grok_Column_GetAutoFormat(column: any): any;
  grok_Column_Get_Is_Categorical(column: any): any;
  grok_Column_Get_Is_Numerical(column: any): any;
  grok_Column_FireValuesChanged(column: any): any;
  grok_FloatColumn_GetDoublePrecision(c: any): any;
  grok_FloatColumn_SetDoublePrecision(c: any, doublePrecision: Bool): any;
  grok_BigIntColumn_GetValue(c: any, i: Num): any;
  grok_BigIntColumn_SetValue(c: any, i: Num, x: String, notify: Bool): any;
  grok_BigIntJs_To_BigInt(bigint: String): any;
  grok_BigInt_To_BigIntJs(bigint: any): any;
  grok_DateTimeColumn_GetValue(c: any, i: Num): any;
  grok_DateTimeColumn_SetValue(c: any, i: Num, x: any, notify: Bool): any;
  grok_ColumnsArgs_Get_Columns(args: any): any;
  grok_ColumnsArgs_Set_Columns(args: any, arr: any): any;
  grok_Stats_FromColumn(c: any, mask: any): any;
  grok_Stats_FromValues(values: any): any;
  grok_Stats_Get_UniqueCount(s: any): any;
  grok_Stats_Get_TotalCount(s: any): any;
  grok_Stats_Get_MissingValueCount(s: any): any;
  grok_Stats_Get_ValueCount(s: any): any;
  grok_Stats_Get_Min(s: any): any;
  grok_Stats_Get_Max(s: any): any;
  grok_Stats_Get_Sum(s: any): any;
  grok_Stats_Get_Avg(s: any): any;
  grok_Stats_Get_Stdev(s: any): any;
  grok_Stats_Get_Variance(s: any): any;
  grok_Stats_Get_Skew(s: any): any;
  grok_Stats_Get_Kurt(s: any): any;
  grok_Stats_Get_Med(s: any): any;
  grok_Stats_Get_Q1(s: any): any;
  grok_Stats_Get_Q2(s: any): any;
  grok_Stats_Get_Q3(s: any): any;
  grok_Stats_Corr(s: any, other: any): any;
  grok_Stats_SpearmanCorr(s: any, other: any): any;
  grok_Stats_HistogramsByCategories(valueColumn: any, catColumn: any): any;
  grok_RowList_RemoveAt(rows: any, idx: Num, count: any, notify: Bool): any;
  grok_RowList_RemoveWhere(rows: any, check: any): any;
  grok_RowList_RemoveWhereIdx(rows: any, check: any): any;
  grok_RowList_InsertAt(rows: any, idx: Num, count: any, notify: Bool): any;
  grok_RowList_AddNew(rows: any, values: any, notify: Bool): any;
  grok_RowList_SelectWhere(rows: any, check: any): any;
  grok_RowList_SetValues(rows: any, idx: Num, values: any, notify: Bool): any;
  grok_RowList_RequestFilter(rows: any): any;
  grok_RowList_Match(rows: any, query: any): any;
  grok_RowList_Get_Filters(rows: any): any;
  grok_RowList_AddFilterState(rows: any, obj: any): any;
  grok_RowList_Highlight(rows: any, check: any): any;
  grok_RowList_MouseOverRowFunc(rows: any): any;
  grok_RowList_Where(rows: any, check: any): any;
  grok_RowMatcher_Select(m: any): any;
  grok_RowMatcher_Filter(m: any): any;
  grok_RowMatcher_Highlight(m: any): any;
  grok_RowMatcher_ToDataFrame(m: any): any;
  grok_RowGroup_Get_DataFrame(g: any): any;
  grok_ValueMatcher_ForColumn(col: any, pattern: String): any;
  grok_ValueMatcher_ForType(col: any, pattern: String): any;
  grok_ValueMatcher_Numerical(pattern: String): any;
  grok_ValueMatcher_String(pattern: String): any;
  grok_ValueMatcher_DateTime(pattern: String): any;
  grok_ValueMatcher_Bool(pattern: String): any;
  grok_ValueMatcher_Get_Pattern(m: any): any;
  grok_ValueMatcher_Get_Operator(m: any): any;
  grok_ValueMatcher_Match(m: any, value: any): any;
  grok_ValueMatcher_Validate(m: any, value: any): any;
  grok_Row_Get_Cells(t: any, row: Num): any;
  grok_Cell_Get_DataFrame(c: any): any;
  grok_Cell_Get_Column(c: any): any;
  grok_Cell_Get_Row(c: any): any;
  grok_Cell_Get_RowIndex(c: any): any;
  grok_Cell_Get_ValueString(c: any): any;
  grok_Cell_Get_Value(c: any): any;
  grok_Cell_Set_Value(c: any, value: any): any;
  grok_GridCell_Get_CellType(gc: any): any;
  grok_GridCell_Set_CellType(gc: any, x: String): any;
  grok_GridCell_Get_IsRowHeader(gc: any): any;
  grok_GridCell_Get_IsColHeader(gc: any): any;
  grok_GridCell_Get_Grid(gc: any): any;
  grok_GridCell_Get_Cell(gc: any): any;
  grok_GridCell_Get_Style(gc: any): any;
  grok_GridCell_Get_GridColumn(gc: any): any;
  grok_GridCell_Get_GridRow(gc: any): any;
  grok_GridCell_Get_TableColumn(gc: any): any;
  grok_GridCell_Get_TableRow(gc: any): any;
  grok_GridCell_Get_TableRowIdx(gc: any): any;
  grok_GridCell_Get_CustomText(gc: any): any;
  grok_GridCell_Set_CustomText(gc: any, x: any): any;
  grok_GridCell_Get_IsTableCell(gc: any): any;
  grok_GridCell_Get_Bounds(gridCell: any): any;
  grok_GridCell_Get_Color(gridCell: any): any;
  grok_GridCell_FromValue(value: any): any;
  grok_GridCell_Get_Element(gridCell: any): any;
  grok_GridCell_Set_Element(gridCell: any, e: any): any;
  grok_GridCell_Get_Renderer(gridCell: any): any;
  grok_GridCell_SetValue(gridCell: any, value: any, notify: Bool): any;
  grok_GridCell_Render(gridCell: any, g: any, bounds: any): any;
  grok_GridCell_CreateColHeader(gridColumn: any): any;
  grok_GridCell_Get_Value(gridCell: any): any;
  grok_GridCellStyle_Create(): any;
  grok_GridCellStyle_Get_Font(gcs: any): any;
  grok_GridCellStyle_Set_Font(gcs: any, x: any): any;
  grok_GridCellStyle_Get_TextColor(gcs: any): any;
  grok_GridCellStyle_Set_TextColor(gcs: any, x: any): any;
  grok_GridCellStyle_Get_TextVertical(gcs: any): any;
  grok_GridCellStyle_Set_TextVertical(gcs: any, x: any): any;
  grok_GridCellStyle_Get_BackColor(gcs: any): any;
  grok_GridCellStyle_Set_BackColor(gcs: any, x: any): any;
  grok_GridCellStyle_Get_Element(gcs: any): any;
  grok_GridCellStyle_Set_Element(gcs: any, x: any): any;
  grok_GridCellStyle_Get_HorzAlign(gcs: any): any;
  grok_GridCellStyle_Set_HorzAlign(gcs: any, x: any): any;
  grok_GridCellStyle_Get_Marker(gcs: any): any;
  grok_GridCellStyle_Set_Marker(gcs: any, x: any): any;
  grok_GridCellStyle_Get_MarginLeft(gcs: any): any;
  grok_GridCellStyle_Set_MarginLeft(gcs: any, x: any): any;
  grok_GridCellRenderer_ByName(rendererName: String): any;
  grok_GridCellRenderer_Register(jsRenderer: any): any;
  grok_GridCellRenderer_Get_CellType(r: any): any;
  grok_GridCellRenderer_Render(r: any, g: any, x: Num, y: Num, w: Num, h: Num, gridCell: any): any;
  grok_GridCellRenderArgs_Get_G(args: any): any;
  grok_GridCellRenderArgs_Get_Cell(args: any): any;
  grok_GridCellRenderArgs_Get_Bounds(args: any): any;
  grok_GridCellWidget(): any;
  grok_GridCellWidget_Get_Canvas(gcw: any): any;
  grok_GridCellWidget_Get_Root(gcw: any): any;
  grok_GridCellWidget_Get_GridCell(gcw: any): any;
  grok_GridCellWidget_Set_GridCell(gcw: any, gc: any): any;
  grok_GridCellWidget_Get_Bounds(gcw: any): any;
  grok_GridCellWidget_Render(gcw: any): any;
  grok_GridColumn_Get_Grid(gc: any): any;
  grok_GridColumn_Get_Column(gc: any): any;
  grok_GridColumn_Get_ContentCellStyle(gc: any): any;
  grok_GridColumn_Get_HeaderCellStyle(gc: any): any;
  grok_GridColumn_Get_Idx(gc: any): any;
  grok_GridColumn_Get_Name(gc: any): any;
  grok_GridColumn_Set_Name(gc: any, x: any): any;
  grok_GridColumn_Get_Width(gc: any): any;
  grok_GridColumn_Set_Width(gc: any, x: any): any;
  grok_GridColumn_Get_BackColor(gc: any): any;
  grok_GridColumn_Set_BackColor(gc: any, x: any): any;
  grok_GridColumn_Get_Format(gc: any): any;
  grok_GridColumn_Set_Format(gc: any, x: any): any;
  grok_GridColumn_Get_CellType(gc: any): any;
  grok_GridColumn_Set_CellType(gc: any, x: any): any;
  grok_GridColumn_Get_Renderer(gc: any): any;
  grok_GridColumn_Set_Renderer(gc: any, x: any): any;
  grok_GridColumn_Get_Visible(gc: any): any;
  grok_GridColumn_Set_Visible(gc: any, x: any): any;
  grok_GridColumn_Get_CategoryColors(gc: any): any;
  grok_GridColumn_Set_CategoryColors(gc: any, x: any): any;
  grok_GridColumn_CheckEditable(gc: any): any;
  grok_GridColumn_Get_Editable(gc: any): any;
  grok_GridColumn_Set_Editable(gc: any, x: any): any;
  grok_GridColumn_Get_Selected(gc: any): any;
  grok_GridColumn_Set_Selected(gc: any, x: any): any;
  grok_GridColumn_Get_TooltipType(gc: any): any;
  grok_GridColumn_Set_TooltipType(gc: any, x: any): any;
  grok_GridColumn_Get_TooltipForm(gc: any): any;
  grok_GridColumn_Set_TooltipForm(gc: any, x: any): any;
  grok_GridColumn_Get_TooltipColumns(gc: any): any;
  grok_GridColumn_Set_TooltipColumns(gc: any, x: any): any;
  grok_GridColumn_Get_Left(gc: any): any;
  grok_GridColumn_Get_Right(gc: any): any;
  grok_GridColumn_Get_Settings(gc: any): any;
  grok_GridColumn_Set_Settings(gc: any, settings: any): any;
  grok_GridColumn_Get_Temp(gc: any): any;
  grok_GridColumn_Get_Tags(gc: any): any;
  grok_GridColumn_ScrollIntoView(gc: any): any;
  grok_GridColumn_Get_isTextColorCoded(gc: any): any;
  grok_GridColumn_Set_isTextColorCoded(gc: any, x: any): any;
  grok_GridColumn_GetDataWidth(gc: any): any;
  grok_GridColumn_GetGroup(gc: any): any;
  grok_GridColumn_SetGroup(gc: any, group: String): any;
  grok_GridColumn_Get_OnPrepareValueScript(gc: any): any;
  grok_GridColumn_Set_OnPrepareValueScript(gc: any, x: String): any;
  grok_GridColumnList_Move(columns: any, column: any, position: Num): any;
  grok_GridColumnList_ByIndex(columns: any, index: Num): any;
  grok_GridColumnList_ByName(columns: any, columnName: String): any;
  grok_GridColumnList_SetOrder(columns: any, columnNames: any): any;
  grok_GridColumnList_SetVisible(columns: any, columnNames: any): any;
  grok_GridColumnList_Get_Length(columns: any): any;
  grok_GridColumnList_Add(columns: any, cellType: String, gridColumnName: String): any;
  grok_GridColumnList_RemoveAt(columns: any, index: Num): any;
  grok_GridColumnList_Clear(columns: any): any;
  grok_Grid_Create(table: any): any;
  grok_Grid_Sort(grid: any, columns: any, orders: any): any;
  grok_Grid_Get_Canvas(grid: any): any;
  grok_Grid_Get_Overlay(grid: any): any;
  grok_Grid_Get_Columns(grid: any): any;
  grok_Grid_Get_SortByColumns(grid: any): any;
  grok_Grid_Get_SortTypes(grid: any): any;
  grok_Grid_OnCellPrepare(grid: any, f: any): any;
  grok_Grid_OnCellTooltip(grid: any, f: any): any;
  grok_Grid_HitTest(grid: any, x: Num, y: Num): any;
  grok_Grid_GetCell(grid: any, columnName: String, gridRow: Num): any;
  grok_Grid_GetRowOrder(grid: any): any;
  grok_Grid_SetRowOrder(grid: any, order: any): any;
  grok_Grid_ScrollToCell(grid: any, columnId: any, gridRow: Num): any;
  grok_Grid_ScrollToPixels(grid: any, x: Num, y: Num): any;
  grok_Grid_Get_VertScroll(grid: any): any;
  grok_Grid_Get_HorzScroll(grid: any): any;
  grok_Grid_Get_ColHeaderHeight(grid: any): any;
  grok_Grid_Get_ColHeaderRect(grid: any): any;
  grok_Grid_ResetRowHeight(grid: any): any;
  grok_Grid_Invalidate(grid: any): any;
  grok_Grid_Get_PinnedRows(grid: any): any;
  grok_Grid_GetMinVisibleRow(grid: any): any;
  grok_Grid_GetMaxVisibleRow(grid: any): any;
  grok_Grid_GetMinVisibleCol(grid: any): any;
  grok_Grid_GetMaxVisibleCol(grid: any): any;
  grok_Grid_GetVisibleCells(grid: any, column: any): any;
  grok_Grid_AutoSize(grid: any, maxWidth: Num, maxHeight: Num, minWidth: Num, minHeight: Num, autoSizeOnDataChange: Bool): any;
  grok_Grid_TableRowToGrid(grid: any, tableRow: Num): any;
  grok_Grid_GridRowToTable(grid: any, gridRow: Num): any;
  grok_Grid_Render(grid: any, g: any, bounds: any): any;
  grok_User(): any;
  grok_User_From_Id(id: String): any;
  grok_User_Get_FirstName(u: any): any;
  grok_User_Set_FirstName(u: any, s: String): any;
  grok_User_Get_LastName(u: any): any;
  grok_User_Set_LastName(u: any, s: String): any;
  grok_User_Get_Status(u: any): any;
  grok_User_Set_Status(u: any, s: String): any;
  grok_User_Get_Email(u: any): any;
  grok_User_Set_Email(u: any, s: String): any;
  grok_User_Get_Login(u: any): any;
  grok_User_Set_Login(u: any, s: String): any;
  grok_User_Get_Project(u: any): any;
  grok_User_Get_Storage(u: any): any;
  grok_User_Get_Picture(u: any): any;
  grok_User_ToMarkup(u: any): any;
  grok_User_Get_Group(u: any): any;
  grok_User_Test(): any;
  grok_User_Admin(): any;
  grok_User_System(): any;
  grok_UserSession_Get_ExternalToken(s: any): any;
  grok_UserSession_Get_Type(s: any): any;
  grok_UserSession_Get_User(s: any): any;
  grok_Group(name: String): any;
  grok_Group_Get_Members(g: any, admin: Bool): any;
  grok_Group_Add_Member(g: any, c: any, admin: Bool): any;
  grok_Group_Remove_Member(g: any, c: any): any;
  grok_Group_Get_Memberships(g: any, admin: Bool): any;
  grok_Group_Add_Membership(g: any, c: any, admin: Bool): any;
  grok_Group_Remove_Membership(g: any, c: any): any;
  grok_Group_Get_Personal(g: any): any;
  grok_Group_Set_Personal(g: any, x: any): any;
  grok_Group_Get_Hidden(g: any): any;
  grok_Group_Set_Hidden(g: any, x: any): any;
  grok_Group_AllUsers(): any;
  grok_Group_Developers(): any;
  grok_Group_NeedToCreate(): any;
  grok_Group_Test(): any;
  grok_Group_Admin(): any;
  grok_Group_System(): any;
  grok_Group_Administrators(): any;
  grok_Property(name: String, type: String, getter: any, setter: any, defaultValue: any): any;
  grok_Property_Get_Get(p: any): any;
  grok_Property_Set_Get(p: any, x: any): any;
  grok_Property_Get_Set(p: any): any;
  grok_Property_Set_Set(p: any, x: any): any;
  grok_Property_Get_Caption(p: any): any;
  grok_Property_Set_Caption(p: any, x: String): any;
  grok_Property_Get_Name(p: any): any;
  grok_Property_Set_Name(p: any, x: String): any;
  grok_Property_Get_Category(p: any): any;
  grok_Property_Set_Category(p: any, x: String): any;
  grok_Property_Get_PropertyType(p: any): any;
  grok_Property_Set_PropertyType(p: any, x: String): any;
  grok_Property_Get_PropertySubType(p: any): any;
  grok_Property_Get_IncludeInLayout(p: any): any;
  grok_Property_Set_IncludeInLayout(p: any, x: Bool): any;
  grok_Property_Get_SemType(p: any): any;
  grok_Property_Set_SemType(p: any, x: String): any;
  grok_Property_Get_Description(p: any): any;
  grok_Property_Set_Description(p: any, x: String): any;
  grok_Property_Get_Nullable(p: any): any;
  grok_Property_Set_Nullable(p: any, x: Bool): any;
  grok_Property_Get_DefaultValue(p: any): any;
  grok_Property_Set_DefaultValue(p: any, x: any): any;
  grok_Property_Get_Choices(p: any): any;
  grok_Property_Set_Choices(p: any, x: any): any;
  grok_Property_Get_ShowSlider(p: any): any;
  grok_Property_Set_ShowSlider(p: any, x: any): any;
  grok_Property_Get_ShowPlusMinus(p: any): any;
  grok_Property_Set_ShowPlusMinus(p: any, x: any): any;
  grok_Property_Get_Format(p: any): any;
  grok_Property_Set_Format(p: any, x: any): any;
  grok_Property_Get_UserEditable(p: any): any;
  grok_Property_Set_UserEditable(p: any, x: any): any;
  grok_Property_Get_Min(p: any): any;
  grok_Property_Set_Min(p: any, x: any): any;
  grok_Property_Get_Max(p: any): any;
  grok_Property_Set_Max(p: any, x: any): any;
  grok_Property_Get_Step(p: any): any;
  grok_Property_Set_Step(p: any, x: any): any;
  grok_Property_Get_Options(p: any): any;
  grok_Property_Get(p: any, propertyName: String): any;
  grok_Property_Set(p: any, propertyName: String, propertyValue: any): any;
  grok_Property_Get_ColumnTypeFilter(p: any): any;
  grok_Property_Options(p: any, options: any): any;
  grok_Property_RegisterAttachedProperty(typeName: String, p: any): any;
  grok_Property_Get_IsVectorizable(p: any): any;
  grok_Property_Get_VectorName(p: any): any;
  grok_SemanticValue(value: any, semType: String): any;
  grok_SemanticValue_Get_Value(v: any): any;
  grok_SemanticValue_Set_Value(v: any, x: any): any;
  grok_SemanticValue_Get_Units(v: any): any;
  grok_SemanticValue_Set_Units(v: any, x: any): any;
  grok_SemanticValue_Get_DataType(v: any): any;
  grok_SemanticValue_Get_SemType(v: any): any;
  grok_SemanticValue_Set_SemType(v: any, s: String): any;
  grok_SemanticValue_Get_GridCell(v: any): any;
  grok_SemanticValue_Set_GridCell(v: any, gridCell: any): any;
  grok_SemanticValue_Get_Cell(v: any): any;
  grok_SemanticValue_Set_Cell(v: any, cell: any): any;
  grok_SemanticValue_Get_Viewer(v: any): any;
  grok_SemanticValue_Set_Viewer(v: any, viewer: any): any;
  grok_SemanticValue_Get_Tags(v: any): any;
  grok_SemanticValue_Get_Meta(v: any, name: String): any;
  grok_SemanticValue_Set_Meta(v: any, name: String, value: any): any;
  grok_SemanticValue_FromTableCell(cell: any): any;
  grok_SemanticValue_FromGridCell(cell: any): any;
  grok_SemanticValue_Parse(s: String): any;
  grok_SemanticValue_Register_RegExp_Detector(semType: String, regexp: String, description: String): any;
  grok_EntityType_Create(name: String, matching: String): any;
  grok_EntityType_Get_Name(et: any): any;
  grok_EntityType_Set_Name(et: any, s: String): any;
  grok_EntityType_Get_Matching(et: any): any;
  grok_EntityType_Set_Matching(et: any, s: String): any;
  grok_EntityProperty_Create(name: String, propType: String): any;
  grok_Schema_Create(name: String): any;
  grok_Schema_Get_Name(s: any): any;
  grok_Schema_Get_Properties(s: any): any;
  grok_Schema_Set_Properties(s: any, p: any): any;
  grok_Schema_Get_EntityTypes(s: any): any;
  grok_Schema_Set_EntityTypes(s: any, et: any): any;
  grok_Sticky_GetSchemas(): Promise<any>;
  grok_Sticky_SetAllValues(schema: any, col: any, values: any): Promise<any>;
  grok_Sticky_GetAllValues(schema: any, col: any): Promise<any>;
  grok_Sticky_SaveSchema(schema: any): Promise<any>;
  grok_Sticky_DeleteSchema(id: String): Promise<any>;
  grok_BitSet(length: Num): any;
  grok_BitSet_Get_Buffer(b: any): any;
  grok_BitSet_Set_Buffer(b: any, data: any): any;
  grok_BitSet_Get_Length(b: any): any;
  grok_BitSet_Get_TrueCount(b: any): any;
  grok_BitSet_Get_FalseCount(b: any): any;
  grok_BitSet_Clone(b: any): any;
  grok_BitSet_Invert(b: any, notify: Bool): any;
  grok_BitSet_SetAll(b: any, x: Bool, notify: Bool): any;
  grok_BitSet_GetBit(b: any, i: Num): any;
  grok_BitSet_Get_Version(b: any): any;
  grok_BitSet_SetBit(b: any, i: Num, x: Bool, notify: Bool): any;
  grok_BitSet_GetSelectedIndexes(b: any): any;
  grok_BitSet_FindNext(b: any, i: Num, x: Bool): any;
  grok_BitSet_FindPrev(b: any, i: Num, x: Bool): any;
  grok_BitSet_CopyFrom(b1: any, b2: any, notify: Bool): any;
  grok_BitSet_FireChanged(b: any): any;
  grok_BitSet_OnChanged(b: any, handler: any): any;
  grok_BitSet_Changed(b: any): any;
  grok_BitSet_SimilarityTo(b: any, b2: any, metric: String): any;
  grok_BitSet_FromString(zeroOnes: String): any;
  grok_BitSet_ToBinaryString(b: any): any;
  grok_BitSet_FromBytes(buffer: any, length: Num): any;
  grok_BitSet_And(a: any, b: any, notify: Bool): any;
  grok_BitSet_Or(a: any, b: any, notify: Bool): any;
  grok_BitSet_AndNot(a: any, b: any, notify: Bool): any;
  grok_BitSet_Xor(a: any, b: any, notify: Bool): any;
  grok_BitSet_SetBuffer(b: any, data: any, notify: Bool): any;
  grok_PictureMixin_Get_PictureUrl(p: any): any;
  grok_Project(): any;
  grok_Project_Get_Path(p: any): any;
  grok_Project_Get_Options(p: any): any;
  grok_Project_From_Id(id: String): any;
  grok_Project_Get_IsOnServer(p: any): any;
  grok_Project_GetRelations(p: any, link: Bool): any;
  grok_Project_AddRelation(p: any, e: any, link: Bool): any;
  grok_Project_RemoveRelation(p: any, e: any): any;
  grok_Project_Get_IsLocal(p: any): any;
  grok_Project_Description(p: any): any;
  grok_Project_IsDirty(p: any): any;
  grok_Project_IsEmpty(p: any): any;
  grok_Project_ToMarkup(p: any): any;
  grok_Project_Open(p: any, closeAll: Bool, openViews: Bool, createViews: Bool): Promise<any>;
  grok_TableInfo_Get_DataFrame(ti: any): any;
  grok_TableInfo_Get_Columns(ti: any): any;
  grok_TableInfo_Get_Tags(ti: any): any;
  grok_ColumnInfo_Get_Type(ci: any): any;
  grok_ColumnInfo_Get_SemType(ci: any): any;
  grok_ColumnInfo_Get_LayoutColumnId(ci: any): any;
  grok_ColumnInfo_Get_Tags(ci: any): any;
  grok_HistoryEntry_Get_Object(e: any): any;
  grok_HistoryEntry_Get_Time(e: any): any;
  grok_Entity_Get_Id(p: any): any;
  grok_Entity_Set_Id(p: any, id: String): any;
  grok_Entity_New_Id(e: any): any;
  grok_Entity_Path(p: any): any;
  grok_Query_Query(q: any): any;
  grok_Query_Set_Query(q: any, s: String): any;
  grok_Query_Get_AdHoc(q: any): any;
  grok_Query_Set_AdHoc(q: any, adHoc: Bool): any;
  grok_Query_Get_Connection(q: any): any;
  grok_Query_Set_Connection(q: any, dc: any): any;
  grok_Query_ExecuteTable(q: any): Promise<any>;
  grok_TableQuery_Create(dc: any): any;
  grok_TableQuery_SetTable(tc: any, tableName: String): any;
  grok_TableQuery_GetTable(tc: any): any;
  grok_TableQuery_SetFields(tc: any, fields: any): any;
  grok_TableQuery_GetFields(tc: any): any;
  grok_TableQuery_ExecuteTable(tc: any): Promise<any>;
  grok_TableQuery_GetWhereClausesDB(tc: any): any;
  grok_TableQuery_SetWhereClausesDB(tc: any, wl: any): any;
  grok_TableQuery_GetAggregationsDB(tc: any): any;
  grok_TableQuery_SetAggregationsDB(tc: any, wl: any): any;
  grok_TableQuery_GetHavingDB(tc: any): any;
  grok_TableQuery_SetHavingDB(tc: any, wl: any): any;
  grok_TableQuery_GetOrderByDB(tc: any): any;
  grok_TableQuery_SetOrderByDB(tc: any, wl: any): any;
  grok_TableQuery_From(table: String): any;
  grok_TableQuery_FromTable(table: any): any;
  grok_DbTableQueryBuilder_From(table: String, connection: any): any;
  grok_DbTableQueryBuilder_FromTable(table: any): any;
  grok_DbTableQueryBuilder_SelectAll(dtqb: any): any;
  grok_DbTableQueryBuilder_Select(dtqb: any, fields: any): any;
  grok_DbTableQueryBuilder_SelectAggr(dtqb: any, func: String, field: String, alias: String): any;
  grok_DbTableQueryBuilder_SelectAggrAll(dtqb: any, aggregations: any): any;
  grok_DbTableQueryBuilder_GroupBy(dtqb: any, fields: any): any;
  grok_DbTableQueryBuilder_PivotOn(dtqb: any, fields: any): any;
  grok_DbTableQueryBuilder_Where(dtqb: any, field: String, pattern: String, dataType: String): any;
  grok_DbTableQueryBuilder_Having(dtqb: any, field: String, pattern: String, dataType: String): any;
  grok_DbTableQueryBuilder_WhereAll(dtqb: any, whereClauses: any): any;
  grok_DbTableQueryBuilder_WhereAny(dtqb: any, whereClauses: any): any;
  grok_DbTableQueryBuilder_SortBy(dtqb: any, field: String, asc: Bool): any;
  grok_DbTableQueryBuilder_Limit(dtqb: any, n: Num): any;
  grok_DbTableQueryBuilder_Join(dtqb: any, rightTable: String, joinType: String, leftTableKeys: any, rightTableKeys: any, rightTableAlias: String, leftTable: String): any;
  grok_DbTableQueryBuilder_Build(dtqb: any): any;
  grok_Entity_Get_FriendlyName(p: any): any;
  grok_Entity_Set_FriendlyName(p: any, name: String): any;
  grok_Entity_Has_Tag(e: any, tag: String): any;
  grok_Entity_Tag(e: any, tag: String): any;
  grok_Entity_UnTag(e: any, tag: String): any;
  grok_Entity_Get_Name(p: any): any;
  grok_Entity_Set_Name(p: any, name: String): any;
  grok_Entity_Get_CreatedOn(p: any): any;
  grok_Entity_Get_UpdatedOn(p: any): any;
  grok_Entity_Get_Author(p: any): any;
  grok_Entity_Get_nqName(p: any): any;
  grok_Entity_Share(e: any, g: any, isEdit: Bool): Promise<any>;
  grok_DataConnection_Create(name: String, dataSource: String, options: any): any;
  grok_DataConnection_Get_Parameters(c: any): any;
  grok_DataConnection_Query(c: any, name: String, sql: String): any;
  grok_DataConnection_Get_Credentials(c: any): any;
  grok_DataConnection_Get_DataSource(c: any): any;
  grok_DataConnection_Test(c: any): Promise<any>;
  grok_Credentials_Parameters(c: any): any;
  grok_Credentials_OpenParameters(c: any): any;
  grok_Credentials_Create(json: any): any;
  grok_ScriptEnvironment_Create(name: String): any;
  grok_ScriptEnvironment_Environment(e: any): any;
  grok_ColorPicker(color: any, onChanged: any, colorDiv: any, onOk: any, onCancel: any): any;
  grok_CodeEditor(script: String, mode: String, placeholder: String, root: any): any;
  grok_ProgressIndicator_Get_Canceled(pi: any): any;
  grok_ProgressIndicator_Get_Percent(pi: any): any;
  grok_ProgressIndicator_Get_Description(pi: any): any;
  grok_ProgressIndicator_Set_Description(pi: any, s: String): any;
  grok_ProgressIndicator_Update(pi: any, x: any, d: any): any;
  grok_ProgressIndicator_Log(pi: any, x: any): any;
  grok_ProgressIndicator_Create(): any;
  grok_Progress_Updated(pi: any): any;
  grok_Progress_Log_Updated(pi: any): any;
  grok_Progress_Canceled(pi: any): any;
  grok_Log_TranslateStackTrace(s: String): Promise<any>;
  grok_TaskBarProgressIndicator_Create(name: String, cancelable: Bool, pausable: Bool, spinner: Bool): any;
  grok_TaskBarProgressIndicator_Close(pi: any): any;
  grok_TagEditor(): any;
  grok_TagEditor_Get_Root(te: any): any;
  grok_TagEditor_Get_Tags(te: any): any;
  grok_TagEditor_AddTag(te: any, tag: any, notify: any): any;
  grok_TagEditor_RemoveTag(te: any, tag: any): any;
  grok_TagEditor_ClearTags(te: any): any;
  grok_TagEditor_Set_AcceptsDragDrop(te: any, predicate: any): any;
  grok_TagEditor_Set_DoDrop(te: any, action: any): any;
  grok_TagEditor_OnChanged(te: any, handler: any): any;
  grok_TagElement_Get_Tag(te: any): any;
  grok_TagElement_Set_Tag(te: any, tag: any): any;
  grok_InputBase_Get_InputType(input: any): any;
  grok_InputBase_Get_DataType(input: any): any;
  grok_InputBase_Get_Property(input: any): any;
  grok_InputBase_Set_Property(input: any, p: any): any;
  grok_InputBase_Get_Root(input: any): any;
  grok_InputBase_Get_Caption(input: any): any;
  grok_InputBase_Set_Caption(input: any, s: String): any;
  grok_InputBase_Get_InputType(input: any): any;
  grok_InputBase_Get_Format(input: any): any;
  grok_InputBase_Set_Format(input: any, s: String): any;
  grok_InputBase_Get_CaptionLabel(input: any): any;
  grok_InputBase_Get_Input(input: any): any;
  grok_InputBase_Get_Nullable(input: any): any;
  grok_InputBase_Set_Nullable(input: any, v: Bool): any;
  grok_InputBase_Get_Notify(input: any): any;
  grok_InputBase_Set_Notify(input: any, v: Bool): any;
  grok_InputBase_Get_Value(input: any): any;
  grok_InputBase_Set_Value(input: any, x: any): any;
  grok_InputBase_Get_StringValue(input: any): any;
  grok_InputBase_Set_StringValue(input: any, s: String): any;
  grok_InputBase_Get_ReadOnly(input: any): any;
  grok_InputBase_Set_ReadOnly(input: any, v: Bool): any;
  grok_InputBase_Get_Enabled(input: any): any;
  grok_InputBase_Set_Enabled(input: any, v: Bool): any;
  grok_InputBase_OnChanged(input: any): any;
  grok_InputBase_OnInput(input: any): any;
  grok_InputBase_Save(input: any): any;
  grok_InputBase_Load(input: any, v: String): any;
  grok_InputBase_Init(input: any): any;
  grok_InputBase_FireChanged(input: any): any;
  grok_InputBase_FireInput(input: any): any;
  grok_InputBase_AddCaption(input: any, caption: String): any;
  grok_InputBase_AddPostfix(input: any, postfix: String): any;
  grok_InputBase_AddOptions(input: any, options: any): any;
  grok_InputBase_AddValidator(input: any, validate: any): any;
  grok_InputBase_AddPatternMenu(input: any, pattern: String): any;
  grok_InputBase_SetTooltip(input: any, msg: String, tooltipCheck: any): any;
  grok_InputBase_ForProperty(property: any, source: any): any;
  grok_InputBase_ForInputType(inputType: String): any;
  grok_InputBase_ForColumn(column: any): any;
  grok_InputBase_FromJS(jsInput: any): any;
  grok_CodeEditor_Get_Root(editor: any): any;
  grok_CodeEditor_Append(editor: any, x: String): any;
  grok_CodeEditor_SetReadOnly(editor: any, x: Bool): any;
  grok_CodeEditor_Get_Value(editor: any): any;
  grok_CodeEditor_Set_Value(editor: any, x: String): any;
  grok_CodeEditor_OnValueChanged(editor: any): any;
  grok_InputForm_ForInputs(inputs: any): any;
  grok_InputForm_ForFuncCallAsync(fc: any, twoWayBinding: Bool, skipDefaultInit: Bool): Promise<any>;
  grok_InputForm_Get_Root(form: any): any;
  grok_InputForm_GetInput(form: any, propertyName: String): any;
  grok_InputForm_Get_IsValid(form: any): any;
  grok_InputForm_Get_Source(form: any): any;
  grok_InputForm_Set_Source(form: any, x: any): any;
  grok_InputForm_OnInputChanged(form: any): any;
  grok_InputForm_OnValidationCompleted(form: any): any;
  grok_DateInput_Get_Value(input: any): any;
  grok_DateInput_Set_Value(input: any, x: any): any;
  grok_ChoiceInput_Get_Items(input: any): any;
  grok_ChoiceInput_Set_Items(input: any, x: any): any;
  grok_RadioInput_Set_Items(input: any, x: any): any;
  grok_MultiChoiceInput_Set_Items(input: any, x: any): any;
  grok_StringInput_AddClearIcon(input: any, x: any): any;
  grok_StringInput_AddEscClears(input: any, x: any): any;
  grok_StringInput_AddIcon(input: any, x: any): any;
  grok_TextInput_SetSize(input: any, width: any, height: any): any;
  grok_ColumnInput_ChangeTable(input: any, table: any, predicate: any): any;
  grok_ColumnsInput_ChangeTable(input: any, table: any, predicate: any): any;
  grok_ColumnsInput_ChangeAvailableColumns(input: any, availableColumns: any): any;
  grok_ColumnsInput_ChangeCheckedColumns(input: any, checkedColumns: any): any;
  grok_ColorInput_SetShowOnlyColorBox(input: any, x: any): any;
  grok_PropertyGrid(): any;
  grok_PropertyGrid_Update(propGrid: any, src: any, props: any): any;
  grok_TreeViewNode_Tree(): any;
  grok_TreeViewNode_Root(node: any): any;
  grok_TreeViewNode_Get_Value(node: any): any;
  grok_TreeViewNode_Set_Value(node: any, value: any): any;
  grok_TreeViewNode_Parent(node: any): any;
  grok_TreeViewNode_Remove(node: any): any;
  grok_TreeViewNode_CaptionLabel(node: any): any;
  grok_TreeViewNode_CheckBox(node: any): any;
  grok_TreeViewNode_Get_Checked(node: any): any;
  grok_TreeViewNode_Set_Checked(node: any, checked: Bool): any;
  grok_TreeViewNode_Get_Tag(node: any): any;
  grok_TreeViewNode_Set_Tag(node: any, tag: any): any;
  grok_TreeViewNode_Get_CurrentItem(node: any): any;
  grok_TreeViewNode_Set_CurrentItem(group: any, node: any): any;
  grok_TreeViewNode_Get_Text(node: any): any;
  grok_TreeViewNode_Set_Text(node: any, value: String): any;
  grok_TreeViewNode_Group(node: any, text: any, value: any, expanded: Bool, index: Num): any;
  grok_TreeViewNode_GetOrCreateGroup(node: any, text: String, value: any, expanded: Bool): any;
  grok_TreeViewNode_Item(node: any, text: any, value: any): any;
  grok_TreeViewNode_Items(node: any): any;
  grok_TreeViewNode_Children(node: any): any;
  grok_TreeViewNode_EnableCheckBox(node: any, checked: Bool): any;
  grok_TreeViewNode_GetAutoCheckChildren(node: any): any;
  grok_TreeViewNode_SetAutoCheckChildren(node: any, auto: Bool): any;
  grok_TreeViewNode_Get_Expanded(node: any): any;
  grok_TreeViewNode_Set_Expanded(node: any, expanded: Bool): any;
  grok_FilesWidget(options: any): any;
  grok_Test_RunViewerTest(viewerName: String): Promise<any>;
  grok_Windows_Get_Sidebar(): any;
  grok_Windows_Get_ShowSidebar(): any;
  grok_Windows_Set_ShowSidebar(x: Bool): any;
  grok_Windows_Get_ShowToolbox(): any;
  grok_Windows_Set_ShowToolbox(x: Bool): any;
  grok_Windows_Get_ShowFavorites(): any;
  grok_Windows_Set_ShowFavorites(x: Bool): any;
  grok_Windows_Get_ShowBrowse(): any;
  grok_Windows_Set_ShowBrowse(x: Bool): any;
  grok_Windows_Get_ShowProjects(): any;
  grok_Windows_Set_ShowProjects(x: Bool): any;
  grok_Windows_Get_ShowStatusBar(): any;
  grok_Windows_Set_ShowStatusBar(x: Bool): any;
  grok_Windows_Get_ShowConsole(): any;
  grok_Windows_Set_ShowConsole(x: Bool): any;
  grok_Windows_Get_ShowVariables(): any;
  grok_Windows_Set_ShowVariables(x: Bool): any;
  grok_Windows_Get_ShowProperties(): any;
  grok_Windows_Set_ShowProperties(x: Bool): any;
  grok_Windows_Get_ShowTables(): any;
  grok_Windows_Set_ShowTables(x: Bool): any;
  grok_Windows_Get_ShowColumns(): any;
  grok_Windows_Set_ShowColumns(x: Bool): any;
  grok_Windows_Get_ShowHelp(): any;
  grok_Windows_Set_ShowHelp(x: Bool): any;
  grok_Windows_Get_ShowRibbon(): any;
  grok_Windows_Set_ShowRibbon(x: Bool): any;
  grok_StringUtils_ToSentenceCase(s: String): any;
  grok_StringUtils_CamelCaseToSentence(s: String, capitalizeFirst: Bool, capitalizeNext: Bool, capitalizeConjunctions: any): any;
  grok_Context_Create(): any;
  grok_Context_CloneDefault(): any;
  grok_Context_Get_Variable(context: any, name: String): any;
  grok_Context_Set_Variable(context: any, name: String, value: any): any;
  grok_FuncCall_Get_Editor(call: any, condensed: Bool, showTableSelectors: Bool): Promise<any>;
  grok_FuncCall_Build_Editor(call: any, root: any, condensed: Bool, showTableSelectors: Bool): Promise<any>;
  grok_FuncCall_Edit(call: any): any;
  grok_Func_Get_Options(func: any): any;
  grok_Func_Get_Aux(func: any): any;
  grok_FuncCall_Get_Options(call: any): any;
  grok_FuncCall_Get_Aux(call: any): any;
  grok_FuncCall_Set_Aux_Value(call: any, name: String, value: any): any;
  grok_FuncCall_Get_Params(call: any, input: Bool): any;
  grok_FuncCall_Get_Func(call: any): any;
  grok_FuncCall_Set_Func(call: any, func: any): any;
  grok_FuncCall_Get_Started(call: any): any;
  grok_FuncCall_Set_Started(call: any, millisecondSinceEpoch: Num): any;
  grok_FuncCall_Get_Finished(call: any): any;
  grok_FuncCall_Get_Status(call: any): any;
  grok_FuncCall_Get_ErrorMessage(call: any): any;
  grok_FuncCall_Get_ErrorStackTrace(call: any): any;
  grok_FuncCall_Get_Author(call: any): any;
  grok_FuncCall_Get_ParentCall(call: any): any;
  grok_FuncCall_Set_ParentCall(call: any, c: any): any;
  grok_FuncCall_Get_Context(call: any): any;
  grok_FuncCall_Set_Context(call: any, context: any): any;
  grok_FuncCall_Set_Param_Value(call: any, name: String, value: any): any;
  grok_FuncCall_Clone(call: any): any;
  grok_FuncCall_Get_AdHoc(f: any): any;
  grok_FuncCall_Set_AdHoc(f: any, adHoc: Bool): any;
  grok_FuncCall_GetOutputViews(c: any): any;
  grok_FuncCall_Get_DebugLogger(c: any): any;
  grok_FuncCallParam_Get_Aux(p: any): any;
  grok_FuncCallParam_Get_Param(p: any): any;
  grok_FuncCallParam_Get_Value(p: any): any;
  grok_FuncCallParam_ProcessOutput(p: any): any;
  grok_FuncCallParam_OnChanged(p: any, f: any): any;
  grok_FuncCall_Get_Param_Value(call: any, name: String): any;
  grok_FuncCall_Get_Output_Param_Value(call: any): any;
  grok_Meta_Register(jsMeta: any): any;
  grok_Meta_List(): any;
  grok_Meta_ForEntity(entity: any): any;
  grok_Meta_ForSemType(semType: String, resolve: any, reject: any): any;
  grok_Meta_Get_Type(meta: any): any;
  grok_Meta_IsApplicable(meta: any, x: any): any;
  grok_Meta_Get_Name(meta: any, x: any): any;
  grok_Meta_RenderIcon(meta: any, x: any): any;
  grok_Meta_RenderMarkup(meta: any, x: any): any;
  grok_Meta_RenderTooltip(meta: any, x: any): any;
  grok_Meta_RenderCard(meta: any, x: any): any;
  grok_Meta_RenderProperties(meta: any, x: any): any;
  grok_Meta_RenderView(meta: any, x: any): any;
  grok_MarkupHandler_Register(regexp: String, description: String, renderFromMatches: any): any;
  grok_Route(url: String): any;
  grok_ParseCsv(s: String, options: any): any;
  grok_TestData(s: String, rows: Num, columns: Num): any;
  grok_AddTableView(t: any, dockStyle: String, width: Num, preview: Bool): any;
  grok_AddTable(t: any): any;
  grok_CloseTable(t: any): any;
  grok_GetTableView(name: String): any;
  grok_GetView(name: String): any;
  grok_GetViews(): any;
  grok_GetTableViews(): any;
  grok_GetVar(name: String): any;
  grok_SetVar(name: String, value: any): any;
  grok_ShowHelp(x: any): any;
  grok_AddView(v: any, dockStyle: String, width: Num, preview: Bool): any;
  grok_CloseAll(): any;
  grok_LinkTables(t1: any, t2: any, keys1: any, keys2: any, linkTypes: any, initialSync: Bool): any;
  grok_CompareTables(t1: any, t2: any, keys1: any, keys2: any, values1: any, values2: any): any;
  grok_JoinTables(t1: any, t2: any, keys1: any, keys2: any, values1: any, values2: any, joinType: String, inPlace: Bool): any;
  grok_Subscription_Cancel(sub: any): any;
  grok_OpenTable(id: String): Promise<any>;
  grok_Query(queryName: String, queryParameters: any, adHoc: Bool): Promise<any>;
  grok_CallQuery(queryName: String, queryParameters: any, adHoc: Bool): Promise<any>;
  grok_GetCurrentCall(): any;
  grok_CallFunc(p0: any, p1: any, p2: any, p3: any): Promise<any>;
  grok_Files_OpenTable(name: String): Promise<any>;
  grok_Files_OpenTables(name: String): Promise<any>;
  grok_Func_LoadQueriesScripts(): Promise<any>;
  grok_Func_Get_Type(func: any): any;
  grok_Func_Get_Path(func: any): any;
  grok_Func_Get_HelpUrl(func: any): any;
  grok_Func_Set_HelpUrl(func: any, x: String): any;
  grok_Func_Get_Package(func: any): any;
  grok_Func_Get_Description(func: any): any;
  grok_Func_Set_Description(func: any, x: String): any;
  grok_Func_Get_InputParams(func: any): any;
  grok_Func_Get_OutputParams(func: any): any;
  grok_Func_Prepare(func: any, parameters: any): any;
  grok_Func_Find(packageName: String, functionName: String, tags: any, meta: any, resultType: String, resultSemType: String): any;
  grok_FuncCall_Call(call: any, showProgress: any, progress: any, processed: Bool, report: Bool): Promise<any>;
  grok_FuncCall_Cancel(call: any): Promise<any>;
  grok_FuncCall_Call_Sync(call: any, processed: Bool, report: Bool): any;
  grok_Script_Create(script: String): any;
  grok_Script_GetScript(script: any): any;
  grok_Script_SetScript(script: any, s: String): any;
  grok_Script_ClientCode(script: any): any;
  grok_Script_GetLanguage(script: any): any;
  grok_Script_SetLanguage(script: any, s: String): any;
  grok_Script_Get_Environment(script: any): any;
  grok_Script_Set_Environment(script: any, s: String): any;
  grok_Script_Get_Reference(script: any): any;
  grok_Script_Set_Reference(script: any, s: String): any;
  grok_Script_Get_Sample(script: any): any;
  grok_Script_Set_Sample(script: any, s: String): any;
  grok_Script_Get_Tags(script: any): any;
  grok_Script_Set_Tags(script: any, tags: any): any;
  grok_EvalFunc(text: String, context: any): Promise<any>;
  grok_DockElement(e: any, title: String, dockStyle: String, ratio: Num): any;
  grok_OnEvent(eventName: String, f: any): any;
  grok_OnObjectEvent(obj: any, eventName: String, f: any): any;
  grok_RegisterFunc(f: any): any;
  grok_RegisterParamFunc(name: any, type: any, run: any, check: any, desc: any): any;
  grok_RegisterViewer(name: String, description: String, createViewer: any): any;
  grok_Color_CategoricalPalette(): any;
  grok_Color_CategoricalSchemes(): any;
  grok_Color_ContinuousSchemes(): any;
  grok_Color_GetCategoricalPalettes(): any;
  grok_Color_GetContrastColor(color: Num): any;
  grok_Color_ToHtml(color: Num): any;
  grok_Color_FromHtml(htmlColor: String): any;
  grok_Color_FromCell(cell: any): any;
  grok_Color_FromCategory(column: any, category: String): any;
  grok_Color_ScaleColor(x: Num, min: Num, max: Num, alpha: Num, colorScheme: any): any;
  grok_Color_Highlight(color: Num): any;
  grok_Color_Darken(color: Num, diff: Num): any;
  grok_Color_GetRowColor(column: any, row: Num): any;
  grok_UI_Span(x: any): any;
  grok_UI_Loader(): any;
  grok_UI_SetUpdateIndicator(e: any, u: Bool, m: String): any;
  grok_UI_Render(x: any): any;
  grok_UI_RenderCard(x: any): any;
  grok_UI_RenderCardInGallery(x: any): any;
  grok_UI_Div(elements: any, className: String): any;
  grok_UI_DivV(elements: any, className: String): any;
  grok_UI_DivH(elements: any, className: String): any;
  grok_UI_Button(content: any, handler: any, tooltip: String): any;
  grok_UI_BigButton(content: any, handler: any, tooltip: String): any;
  grok_UI_ComboPopup(caption: any, items: any, handler: any, renderer: any): any;
  grok_UI_TableFromMap(x: any, showCopyValue: Bool): any;
  grok_UI_List(items: any): any;
  grok_UI_Bind(item: any, element: any, contextMenu: any): any;
  grok_UI_Wait(jsugetElement: any): any;
  grok_UI_WaitBox(jsugetElement: any): any;
  grok_UI_ShowPopup(element: any, anchor: any, vertical: Bool, dx: Num, dy: Num, smart: Bool): any;
  grok_UI_Markdown(x: String): any;
  grok_UI_Tags(x: any): any;
  grok_UI_Context_Actions(x: any): any;
  grok_UI_Star(id: String): any;
  grok_UI_PatternsInput(colors: any): any;
  grok_UI_SchemeInput(gradient: any): any;
  grok_UI_MakeDraggable(e: any, allowCopy: any, check: any, getDragObject: any, getDragCaption: any, dragObjectType: String, getDragHint: any, getDragContext: any, onDragStart: any, onDragEnd: any): any;
  grok_UI_MakeDroppable(e: any, acceptDrop: any, doDrop: any): any;
  grok_UI_InitFormulaAccelerators(textInput: any, table: any): any;
  grok_ML_ApplyModel(model: String, table: any, columnNamesMap: any, showProgress: Bool): Promise<any>;
  grok_ML_MissingValuesImputation(table: any, impute: any, data: any, nearestNeighbours: any): Promise<any>;
  grok_ML_Cluster(table: any, features: any, clusters: any): Promise<any>;
  grok_ML_PCA(table: any, features: any, components: any, center: any, scale: any): Promise<any>;
  grok_ML_RandomData(table: any, distribution: String, params: any, seed: any): Promise<any>;
  grok_Chem_Sketcher(handler: any, smiles: String): any;
  grok_Notebook_Get_Environment(n: any): any;
  grok_Notebook_Set_Environment(n: any, e: String): any;
  grok_Notebook_Get_Description(n: any): any;
  grok_Notebook_Get_Notebook_Content(n: any): any;
  grok_Notebook_Set_Notebook_Content(n: any, jsObject: any): any;
  grok_Notebook_Set_Description(n: any, d: String): any;
  grok_Package_Get_Credentials(packageName: String): Promise<any>;
  grok_Package_Get_Meta(p: any): any;
  grok_Package_GetModuleName(p: any, file: String): any;
  grok_Package_GetModule(p: any, file: String): any;
  grok_Package_GetIconUrl(p: any): any;
  grok_Package_Get_Settings_Sync(packageName: String): any;
  grok_Package_Set_Settings(packageName: String, settings: any, group: any): Promise<any>;
  grok_Package_Get_Version(p: any): any;
  grok_Package_Set_Version(p: any, version: String): any;
  grok_Package_Get_WebRoot(p: any): any;
  grok_Package_Get_Package_Author(p: any): any;
  grok_Package_Get_Properties(packageName: String): Promise<any>;
  grok_Package_Get_Settings(packageName: String): Promise<any>;
  grok_Rect_Pack(r: any, bytes: any): any;
  grok_Rect_Unpack(bytes: any): any;
  grok_FileInfo_FromBytes(path: String, data: any): any;
  grok_FileInfo_FromString(path: String, data: String): any;
  grok_FileInfo_Get_Connection(fi: any): any;
  grok_FileInfo_Get_Path(fi: any): any;
  grok_FileInfo_Get_FullPath(fi: any): any;
  grok_FileInfo_Get_ViewPath(fi: any): any;
  grok_FileInfo_Get_Extension(fi: any): any;
  grok_FileInfo_Get_FileName(fi: any): any;
  grok_FileInfo_Get_Url(fi: any): any;
  grok_FileInfo_Get_IsFile(fi: any): any;
  grok_FileInfo_Get_IsDirectory(fi: any): any;
  grok_FileInfo_Get_Data(fi: any): any;
  grok_FileInfo_Get_UpdatedOn(fi: any): any;
  grok_FileInfo_ReadAsBytes(fi: any): Promise<any>;
  grok_FileInfo_ReadAsString(fi: any): Promise<any>;
  grok_Dapi_Root(): any;
  grok_Dapi_WS_Root(): any;
  grok_Dapi_UserFiles_Exists(fi: any): Promise<any>;
  grok_Dapi_UserFiles_Delete(fi: any): Promise<any>;
  grok_Dapi_UserFiles_Move(filesOrDirs: any, fi: any): Promise<any>;
  grok_Dapi_UserFiles_List(fi: any, recursive: Bool, ext: String, root: String): Promise<any>;
  grok_Dapi_UserFiles_ReadAsText(fi: any): Promise<any>;
  grok_Dapi_UserFiles_ReadAsBytes(fi: any): Promise<any>;
  grok_Dapi_UserFiles_Write(fi: any, data: any): Promise<any>;
  grok_Dapi_UserFiles_WriteAsText(fi: any, data: String): Promise<any>;
  grok_Dapi_UserFiles_Rename(fi: any, newName: String): Promise<any>;
  grok_Dapi_UserFiles_ReadBinaryDataFrames(fi: any): Promise<any>;
  grok_Dapi_UserFiles_WriteBinaryDataFrames(fi: any, dfList: any): Promise<any>;
  grok_Dapi_UserFiles_CreateDirectory(fi: any): Promise<any>;
  grok_RangeSlider(style: String, vertical: Bool): any;
  grok_RangeSlider_Get_MinRange(rangeSelector: any): any;
  grok_RangeSlider_Get_MaxRange(rangeSelector: any): any;
  grok_RangeSlider_Get_Min(rangeSelector: any): any;
  grok_RangeSlider_Get_Max(rangeSelector: any): any;
  grok_RangeSlider_SetValues(rangeSelector: any, minRange: Num, maxRange: Num, min: Num, max: Num): any;
  grok_RangeSlider_SetShowHandles(rangeSelector: any, value: Bool): any;
  grok_RangeSlider_Get_OnValuesChanged(rangeSlider: any): any;
  grok_RangeSlider_ScrollTo(rangeSlider: any, newMinValue: Num): any;
  grok_RangeSlider_ScrollBy(rangeSlider: any, delta: Num): any;
  grok_Iterable_Get_Iterator(iterable: any): any;
  grok_Iterator_MoveNext(iterator: any): any;
  grok_Iterator_Current(iterator: any): any;
  grok_LogEventType_Get_Name(logEventType: any): any;
  grok_LogEventType_Get_Comment(logEventType: any): any;
  grok_LogEventType_Set_Comment(logEventType: any, comment: String): any;
  grok_LogEventType_Get_IsError(logEventType: any): any;
  grok_LogEventType_Set_IsError(logEventType: any, isError: Bool): any;
  grok_LogEvent_Get_Description(logEvent: any): any;
  grok_LogEvent_Get_Name(logEvent: any): any;
  grok_LogEvent_Get_Source(logEvent: any): any;
  grok_LogEvent_Get_Session(logEvent: any): any;
  grok_LogEvent_Get_Parameters(logEvent: any): any;
  grok_LogEvent_Get_Type(logEvent: any): any;
  grok_LogEventParameter_Get_Name(p: any): any;
  grok_LogEventParameter_Get_Type(p: any): any;
  grok_LogEventParameter_Get_Description(p: any): any;
  grok_LogEventParameter_Get_IsInput(p: any): any;
  grok_LogEventParameter_Get_IsOptional(p: any): any;
  grok_LogEventParameterValue_Get_Event(v: any): any;
  grok_LogEventParameterValue_Get_Parameter(v: any): any;
  grok_LogEventParameterValue_Get_Value(v: any): any;
  grok_HtmlTable(items: any, renderer: any, columnNames: any): any;
  grok_HtmlTable_Remove(table: any, item: any): any;
  grok_ColumnComboBox(df: any, predicate: any): any;
  grok_ColumnComboBox_Get_Vertical(ccb: any): any;
  grok_ColumnComboBox_Get_Caption(ccb: any): any;
  grok_ColumnComboBox_Set_Caption(ccb: any, name: String): any;
  grok_ColumnComboBox_Get_Property(ccb: any): any;
  grok_Legend(column: any): any;
  grok_Legend_Get_Column(legend: any): any;
  grok_Legend_Set_Column(legend: any, column: any): any;
  grok_Legend_Get_ShowNulls(legend: any): any;
  grok_Legend_Set_ShowNulls(legend: any, show: Bool): any;
  grok_Legend_Get_Position(legend: any): any;
  grok_Legend_Set_Position(legend: any, pos: any): any;
  grok_Legend_Set_OnViewerLegendChanged(legend: any, handler: any): any;
  grok_Legend_Get_FilterBy(legend: any): any;
  grok_Get_Settings(): any;
  grok_Get_StartUri(): any;
  grok_PropMixin_GetProperties(target: any): any;
  grok_PropMixin_GetPropertyValue(target: any, propertyName: String): any;
  grok_PropMixin_SetPropertyValue(target: any, propertyName: String, x: any): any;
  grok_ClearDirtyFlag(): any;
  grok_HtmlUtils_RenderToCanvas(e: any, scale: Num): Promise<any>;
  grok_HtmlUtils_HtmlGetBounds(e: any): any;
  grok_Dapi_TablesDataSource_UploadDataFrame(c: any, df: any): Promise<any>;
  grok_Dapi_TablesDataSource_GetTable(c: any, id: String): Promise<any>;
  grok_Dapi_DockerImagesDataSource_Rebuild(s: any, id: String): Promise<any>;
  grok_Dapi_DockerContainersDataSource_Run(s: any, id: String, awaitStart: Bool): Promise<any>;
  grok_Dapi_DockerContainersDataSource_Stop(s: any, id: String, awaitStop: Bool): Promise<any>;
  grok_Dapi_DockerContainersDataSource_GetContainerLogs(s: any, id: String, limit: Num): Promise<any>;
  grok_Dapi_DockersDataSource_GetServiceLogs(serviceName: String, limit: Num): Promise<any>;
  grok_Dapi_DockersDataSource_GetAvailableServices(): Promise<any>;
  grok_DockerContainer_Status(dc: any): any;
  grok_Dapi_Packages_Load(pack: any, file: any): Promise<any>;
  grok_MathActions_GetDensity(dataFrame: any, xBins: Num, yBins: Num, xColName: String, yColName: String): any;
  grok_Paint_Marker(g: any, type: String, x: Num, y: Num, color: Num, size: Num): any;
  grok_Marker_Types(): any;
  grok_Marker_Type_Indexes(): any;
  grok_Paint_HorzAxis(g: any, min: Num, max: Num, x: Num, y: Num, w: Num, h: Num, log: Bool, inverse: Bool): any;
  grok_Paint_VertAxis(g: any, min: Num, max: Num, x: Num, y: Num, w: Num, h: Num, log: Bool, inverse: Bool): any;
  grok_HelpPanel_Get_SyncCurrentObject(): any;
  grok_HelpPanel_Set_SyncCurrentObject(x: Bool): any;
  grok_ContextPanel_Get_SyncCurrentObject(): any;
  grok_ContextPanel_Set_SyncCurrentObject(x: Bool): any;
  grok_ClientCache_Clear(metaId: String): any;
  grok_ClientCache_Start(): Promise<any>;
  grok_ClientCache_Cleanup(): Promise<any>;
  grok_ClientCache_GetRecordCount(): Promise<any>;
  grok_ClientCache_Stop(): any;
  grok_ClientCache_Get_IsRunning(): any;
  grok_DayJs_To_DateTime(milliseconds: Num): any;
  grok_Test_GetTestDataGeneratorByType(type: String): any;
  grok_Test_GetInputTestDataGeneratorByType(inputType: String): any;
  grok_Shell_GetClientBuildInfo(): any;
  grok_Shell_OpenFileDialog(): any;
  grok_BrowsePanel_Get_LocalTree(view: any): any;
  grok_BrowsePanel_Get_MainTree(view: any): any;
  grok_InfoPanels_GetAccordion(x: any): any;
  grok_Reports_Get(num: Num): Promise<any>;
  grok_Reports_Find(id: String): Promise<any>;
  grok_UserReport_Id(report: any): any;
  grok_UserReport_IsResolved(report: any): any;
  grok_UserReport_JiraTicket(report: any): any;
  grok_UserReport_Assignee(report: any): any;
  grok_UserReport_Reporter(report: any): any;
  grok_UserReport_Description(report: any): any;
  grok_UserReport_CreatedOn(report: any): any;
  grok_Get_StackTrace_Hash(stackTrace: String): any;
  grok_Get_Simple_StackTrace_Hash(stackTrace: String): any;
  grok_TreeViewGroup_Load_Sources(node: any, source: any): Promise<any>;
  grok_ReportsRule_Add_Dialog(): Promise<any>;
  grok_Parse_Command(command: String, safe: Bool): any;
  grok_ColumnName_HandleOuterBrackets(name: String, escape: Bool): any;
  grok_Set_AutoReport_Options(options: any): any;
  grok_ColumnGrid_Create(filter: any, isColGrayedOut: any, gridOptions: any, showMenuIcon: Bool): any;
  grok_ColumnGrid_Create_ColumnManager(dfSource: any, filter: any, gridOptions: any): any;
  grok_ColumnGrid_Create_ColumnReorderManagerDialog(df: any, title: String, dfSource: any, filter: any, order: any, checks: any, addAdditionalChecks: any, additionalChecksName: String, applyOrder: any, applyVisibility: any, gridOptions: any, addServiceColumns: Bool): any;
  grok_ColumnGrid_Create_Popup(dfSource: any, filter: any, addEmpty: Bool, widgetMode: Bool, grayedOutColsMode: Bool, serviceColsTagName: String): any;
  grok_ColumnGrid_Create_ColumnSelector(dfSource: any, checkAll: Bool, filter: any, isChecked: any): any;
  grok_ColumnGrid_Get_DfColumns(cg: any): any;
  grok_ColumnGrid_Get_DfSource(cg: any): any;
  grok_ColumnGrid_Get_GridSource(cg: any): any;
  grok_ColumnGrid_Get_Grid(cg: any): any;
  grok_ColumnGrid_Get_NameCol(cg: any): any;
  grok_ColumnGrid_Get_TypeNameCol(cg: any): any;
  grok_ColumnGrid_Get_Filter(cg: any): any;
  grok_ColumnGrid_Set_Filter(cg: any, filter: any): any;
  grok_ColumnGrid_AddCheckedSelect(cg: any): any;
  grok_ColumnGrid_FilterColumns(cg: any): any;
  grok_ColumnGrid_ShouldShowColumnTooltip(cg: any, column: any): any;
  grok_ColumnGrid_PassesFilter(cg: any, column: any, columnName: String): any;
  grok_ColumnGrid_RefreshStats(cg: any): any;
  grok_ColumnGrid_Get_ShowSearch(cg: any): any;
  grok_ColumnGrid_Set_ShowSearch(cg: any, x: Bool): any;
  grok_ColumnGrid_Close(cg: any): any;
  grok_ColumnGrid_Detach(cg: any): any;
  grok_ColumnGrid_AddColumnSelectionControls(cg: any): any;
  grok_ColumnGrid_InitGrayedOutColumnStyle(cg: any): any;
  grok_ColumnGrid_InitTypeColoring(cg: any): any;
  grok_ColumnGrid_InitColumnTooltips(cg: any): any;
  grok_ColumnGrid_InitColumnDragDrop(cg: any): any;
  grok_ColumnGrid_Init(cg: any, dfSource: any, gridSource: any, filter: any, syncSelections: Bool, order: any, addServiceColumns: Bool): any;
  grok_ColumnGrid_InitColumnSelector(cg: any, dfSource: any, checkAll: Bool, filter: any): any;
  grok_ColumnGrid_InitContextMenu(cg: any): any;
  grok_ColumnGrid_InitColumnManager(cg: any, dfSource: any, filter: any): any;
  grok_ColumnGrid_GetRow(cg: any, col: any): any;
  grok_ColumnGrid_GetCol(cg: any, row: Num): any;
  grok_ColumnGrid_Get_CurrentColumn(cg: any): any;
  grok_ColumnGrid_Get_MouseOverColumn(cg: any): any;
  grok_ColumnGrid_AddChecks(cg: any, isChecked: any, addAdditionalChecks: any, additionalChecksName: String): any;
  grok_ColumnGrid_CheckAll(cg: any, flag: Bool): any;
  grok_ColumnGrid_GetCheckedIndexes(cg: any): any;
  grok_ColumnGrid_GetCheckedColumns(cg: any): any;
  grok_ColumnGrid_GetCheckedColumnNames(cg: any): any;
  grok_ColumnGrid_GetAdditionalCheckedIndexes(cg: any): any;
  grok_ColumnGrid_GetAdditionalCheckedColumns(cg: any): any;
  grok_ColumnGrid_GetAdditionalCheckedColumnNames(cg: any): any;
  grok_ColumnGrid_GetSelectedColumns(cg: any): any;
  grok_ColumnGrid_SetSelectedColumns(cg: any, columnIds: any): any;
  grok_ColumnGrid_Indexes(cg: any, rows: String): any;
  grok_ColumnGrid_AddColumnStats(cg: any, aggType: String): any;
  grok_ColumnGrid_ColumnsToDataFrame(cg: any, columnsOrder: any, addServiceColumns: Bool, serviceColsTagName: String): any;
  grok_ColumnGrid_AddColumnProperty(cg: any, p: any): any;

  // Generated from ../grok_shared/lib/grok_shared.api.g.dart
  grok_DataSourceType_Create(): any;
  grok_ScriptLanguage_Create(): any;
  grok_DockerImage(): any;
  grok_DockerImage_Create(): any;
  grok_DockerImage_Get_description(x: any): any;
  grok_DockerImage_Get_dockerfile(x: any): any;
  grok_DockerImage_Get_status(x: any): any;
  grok_DockerImage_Set_status(x: any, v: String): any;
  grok_DockerImage_Get_dockerName(x: any): any;
  grok_DockerImage_Get_version(x: any): any;
  grok_DockerImage_Set_version(x: any, v: String): any;
  grok_DockerImage_Get_dockerfilePath(x: any): any;
  grok_DockerImage_Get_updatedBy(x: any): any;
  grok_DockerImage_Get_logs(x: any): any;
  grok_DockerImage_Set_logs(x: any, v: String): any;
  grok_DockerImage_Get_completed(x: any): any;
  grok_DockerImage_Get_iconStatus(x: any): any;
  grok_DockerImage_Get_dockerFullName(x: any): any;

  // Generated from ../grok_shared/lib/grok_shared.api.g.dart
  grok_DataSourceType_Create(): any;
  grok_ScriptLanguage_Create(): any;
  grok_DockerImage(): any;
  grok_DockerImage_Create(): any;
  grok_DockerImage_Get_description(x: any): any;
  grok_DockerImage_Get_dockerfile(x: any): any;
  grok_DockerImage_Get_status(x: any): any;
  grok_DockerImage_Set_status(x: any, v: String): any;
  grok_DockerImage_Get_dockerName(x: any): any;
  grok_DockerImage_Get_version(x: any): any;
  grok_DockerImage_Set_version(x: any, v: String): any;
  grok_DockerImage_Get_dockerfilePath(x: any): any;
  grok_DockerImage_Get_updatedBy(x: any): any;
  grok_DockerImage_Get_logs(x: any): any;
  grok_DockerImage_Set_logs(x: any, v: String): any;
  grok_DockerImage_Get_completed(x: any): any;
  grok_DockerImage_Get_iconStatus(x: any): any;
  grok_DockerImage_Get_dockerFullName(x: any): any;

  // Generated from ../ddt/lib/ddt.api.g.dart
  grok_Tags_Create(): any;
  grok_FuncOptions_Create(): any;
  grok_FuncParamOptions_Create(): any;

  // Generated from ../d4/lib/src/common/common.api.g.dart
  grok_UsageType_Create(): any;

  // Generated from ../d4/lib/src/widgets/widgets.api.g.dart
  grok_InputType_Create(): any;

  // Generated from ../d4/lib/src/grid/grid.api.g.dart
  grok_GridCellStyle_Create(): any;
  grok_GridCellStyle_Get_defaultStyle(): any;
  grok_GridCellStyle_Set_defaultStyle(v: any): any;
  grok_GridCellStyle_Get_textStyle(): any;
  grok_GridCellStyle_Set_textStyle(v: any): any;
  grok_GridCellStyle_Get_numberStyle(): any;
  grok_GridCellStyle_Set_numberStyle(v: any): any;
  grok_GridCellStyle_Get_styles(): any;
  grok_GridCellStyle_Set_styles(v: any): any;
  grok_GridCellStyle_Get_font(x: any): any;
  grok_GridCellStyle_Set_font(x: any, v: String): any;
  grok_GridCellStyle_Get_horzAlign(x: any): any;
  grok_GridCellStyle_Set_horzAlign(x: any, v: String): any;
  grok_GridCellStyle_Get_vertAlign(x: any): any;
  grok_GridCellStyle_Set_vertAlign(x: any, v: String): any;
  grok_GridCellStyle_Get_tooltip(x: any): any;
  grok_GridCellStyle_Set_tooltip(x: any, v: String): any;
  grok_GridCellStyle_Get_cursor(x: any): any;
  grok_GridCellStyle_Set_cursor(x: any, v: String): any;
  grok_GridCellStyle_Get_textWrap(x: any): any;
  grok_GridCellStyle_Set_textWrap(x: any, v: String): any;
  grok_GridCellStyle_Get_marker(x: any): any;
  grok_GridCellStyle_Set_marker(x: any, v: String): any;
  grok_GridCellStyle_Get_textColor(x: any): any;
  grok_GridCellStyle_Set_textColor(x: any, v: Num): any;
  grok_GridCellStyle_Get_backColor(x: any): any;
  grok_GridCellStyle_Set_backColor(x: any, v: Num): any;
  grok_GridCellStyle_Get_marginLeft(x: any): any;
  grok_GridCellStyle_Set_marginLeft(x: any, v: Num): any;
  grok_GridCellStyle_Get_marginRight(x: any): any;
  grok_GridCellStyle_Set_marginRight(x: any, v: Num): any;
  grok_GridCellStyle_Get_marginTop(x: any): any;
  grok_GridCellStyle_Set_marginTop(x: any, v: Num): any;
  grok_GridCellStyle_Get_marginBottom(x: any): any;
  grok_GridCellStyle_Set_marginBottom(x: any, v: Num): any;
  grok_GridCellStyle_Get_textVertical(x: any): any;
  grok_GridCellStyle_Set_textVertical(x: any, v: Bool): any;
  grok_GridCellStyle_Get_imageScale(x: any): any;
  grok_GridCellStyle_Set_imageScale(x: any, v: Num): any;
  grok_GridCellStyle_Get_opacity(x: any): any;
  grok_GridCellStyle_Set_opacity(x: any, v: Num): any;
  grok_GridCellStyle_Get_clip(x: any): any;
  grok_GridCellStyle_Set_clip(x: any, v: Bool): any;
  grok_GridCellStyle_Get_element(x: any): any;
  grok_GridCellStyle_Set_element(x: any, v: any): any;
  grok_GridCellStyle_Get_choices(x: any): any;
  grok_GridCellStyle_Set_choices(x: any, v: any): any;
  grok_renderMultipleHistograms(g: any, bounds: any, histograms: any, categoryColumn: any, colors: any, tension: Num, normalize: Bool, markerSize: Num, fill: Bool, minBin: Num, maxBin: Num, localMaximum: Bool, highlightedHistogram: Num): any;

  // Generated from ../d4/lib/src/viewer_base/viewer_base.api.g.dart
  grok_ViewerEvent_Create(): any;
  grok_ViewerEvent_Get_viewer(x: any): any;
  grok_ViewerEvent_Set_viewer(x: any, v: any): any;
  grok_ViewerEvent_Get_type(x: any): any;
  grok_ViewerEvent_Set_type(x: any, v: String): any;
  grok_ViewerEvent_Get_eventFlag(x: any): any;
  grok_ViewerEvent_Set_eventFlag(x: any, v: Bool): any;
  grok_ViewerEvent_Get_filters(x: any): any;
  grok_ViewerEvent_Set_filters(x: any, v: any): any;
  grok_ViewerEvent_Get_row(x: any): any;
  grok_ViewerEvent_Set_row(x: any, v: Num): any;
  grok_ViewerEvent_Get_mouseEvent(x: any): any;
  grok_ViewerEvent_Set_mouseEvent(x: any, v: any): any;
  grok_ViewerEvent_Get_bitset(x: any): any;
}
