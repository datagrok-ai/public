/**
This file is auto-generated by the grok api command.
If you notice any changes, please push them to the repository.
Do not edit this file manually.
*/
import * as grok from 'datagrok-api/grok';
import * as DG from 'datagrok-api/dg';


export namespace scripts {
  /**
  Samples the metabolic map and returns binned values of samples
  */
  export async function optGpSampling(cobraModel: string , nSamples: number | null): Promise<DG.DataFrame> {
    return await grok.functions.call('MetabolicGraph:OptGpSampling', { cobraModel, nSamples });
  }
}

export namespace funcs {
  /**
  Metabolic graph application
  */
  export async function metabolicGraphApp(path?: string , filter?: string ): Promise<DG.View> {
    return await grok.functions.call('MetabolicGraph:MetabolicGraphApp', { path, filter });
  }

  export async function escherFileViewer(file: DG.FileInfo ): Promise<DG.View> {
    return await grok.functions.call('MetabolicGraph:EscherFileViewer', { file });
  }

  export async function escherFileViewerCheck(content: string ): Promise<any> {
    return await grok.functions.call('MetabolicGraph:EscherFileViewerCheck', { content });
  }
}
