/**
This file is auto-generated by the grok api command.
If you notice any changes, please push them to the repository.
Do not edit this file manually.
*/
import * as grok from 'datagrok-api/grok';
import * as DG from 'datagrok-api/dg';


export namespace funcs {
  /**
  Creates a chord viewer
  */
  export async function chordViewer(): Promise<any> {
    return await grok.functions.call(':ChordViewer', {});
  }

  /**
  Creates a globe viewer
  */
  export async function globeViewer(): Promise<any> {
    return await grok.functions.call(':GlobeViewer', {});
  }

  /**
  Creates a group analysis viewer
  */
  export async function groupAnalysisViewer(): Promise<any> {
    return await grok.functions.call(':GroupAnalysisViewer', {});
  }

  /**
  Creates a multiplot viewer
  */
  export async function multiPlotViewer(): Promise<any> {
    return await grok.functions.call(':MultiPlotViewer', {});
  }

  /**
  Creates a radar viewer
  */
  export async function radarViewer(): Promise<any> {
    return await grok.functions.call(':RadarViewer', {});
  }

  /**
  Creates a sankey viewer
  */
  export async function sankeyViewer(): Promise<any> {
    return await grok.functions.call(':SankeyViewer', {});
  }

  /**
  Creates a sunburst viewer
  */
  export async function sunburstViewer(): Promise<any> {
    return await grok.functions.call(':SunburstViewer', {});
  }

  /**
  Creates a surface plot viewer
  */
  export async function surfacePlot(): Promise<any> {
    return await grok.functions.call(':SurfacePlot', {});
  }

  /**
  Creates a timelines viewer
  */
  export async function timelinesViewer(): Promise<any> {
    return await grok.functions.call(':TimelinesViewer', {});
  }

  /**
  Creates a tree viewer
  */
  export async function treeViewer(): Promise<any> {
    return await grok.functions.call(':TreeViewer', {});
  }

  /**
  Creates a word cloud viewer
  */
  export async function wordCloudViewer(): Promise<any> {
    return await grok.functions.call(':WordCloudViewer', {});
  }
}
