/**
This file is auto-generated by the grok api command.
If you notice any changes, please push them to the repository.
Do not edit this file manually.
*/
import * as grok from 'datagrok-api/grok';
import * as DG from 'datagrok-api/dg';


export namespace funcs {
  export async function getUnits(): Promise<any> {
    return await grok.functions.call('OligoBatchCalculator:GetUnits', {});
  }

  export async function opticalDensity(sequence: string , amount: number , outputUnits: string , extCoefsObj: any ): Promise<number> {
    return await grok.functions.call('OligoBatchCalculator:OpticalDensity', { sequence, amount, outputUnits, extCoefsObj });
  }

  export async function nMole(sequence: string , amount: number , outputUnits: string , extinctionCoefficientsObj: any , weightsObj: any ): Promise<number> {
    return await grok.functions.call('OligoBatchCalculator:NMole', { sequence, amount, outputUnits, extinctionCoefficientsObj, weightsObj });
  }

  export async function molecularMass(sequence: string , amount: number , outputUnits: string ): Promise<number> {
    return await grok.functions.call('OligoBatchCalculator:MolecularMass', { sequence, amount, outputUnits });
  }

  export async function molecularWeight(sequence: string , additionalWeightsObj: any ): Promise<number> {
    return await grok.functions.call('OligoBatchCalculator:MolecularWeight', { sequence, additionalWeightsObj });
  }

  export async function oligoBatchCalculatorApp(): Promise<void> {
    return await grok.functions.call('OligoBatchCalculator:OligoBatchCalculatorApp', {});
  }
}
