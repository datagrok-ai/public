/**
This file is auto-generated by the grok api command.
If you notice any changes, please push them to the repository.
Do not edit this file manually.
*/
import * as grok from 'datagrok-api/grok';
import * as DG from 'datagrok-api/dg';


export namespace funcs {
  export async function app(): Promise<void> {
    return await grok.functions.call('EnamineChemSpace:App', {});
  }

  /**
  Chemspace Samples
  */
  export async function samplesPanel(smiles: string ): Promise<any> {
    return await grok.functions.call('EnamineChemSpace:SamplesPanel', { smiles });
  }

  /**
  Creates search panel
  */
  export async function createSearchPanel(searchMode: any , smiles: string , category: any , shipToCountry: any ): Promise<any> {
    return await grok.functions.call('EnamineChemSpace:CreateSearchPanel', { searchMode, smiles, category, shipToCountry });
  }

  /**
  Chemspace Prices
  */
  export async function pricesPanel(id: string ): Promise<any> {
    return await grok.functions.call('EnamineChemSpace:PricesPanel', { id });
  }

  export async function getChemspaceIds(molColumn: DG.Column , shipToCountry: string ): Promise<DG.Column> {
    return await grok.functions.call('EnamineChemSpace:GetChemspaceIds', { molColumn, shipToCountry });
  }

  export async function getChemspacePrices(data: DG.DataFrame , idsColumn: DG.Column , shipToCountry: string ): Promise<DG.DataFrame> {
    return await grok.functions.call('EnamineChemSpace:GetChemspacePrices', { data, idsColumn, shipToCountry });
  }

  /**
  Perform query with multipart form data
  */
  export async function queryMultipart(path: string , formParamsStr: string , paramsStr?: string ): Promise<string> {
    return await grok.functions.call('EnamineChemSpace:QueryMultipart', { path, formParamsStr, paramsStr });
  }
}
